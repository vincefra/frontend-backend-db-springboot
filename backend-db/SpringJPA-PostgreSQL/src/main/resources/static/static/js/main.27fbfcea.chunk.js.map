{"version":3,"sources":["components/main/vizCircle/actions.js","components/main/vizCircle/VizClient.js","components/main/vizCircle/Employee.js","components/main/vizCircle/VizEmployees.js","components/main/vizCircle/VizCircle.js","components/main/vizCircle/Skills.js","components/main/legend/LegendItem.js","components/main/general.js","components/main/legend/Legend.js","components/main/dialogue/Dialogue.js","components/main/vizTimeline/Filter.js","components/main/vizTimeline/VizTimeline.js","components/main/search/actions.js","components/main/search/Result.js","components/main/search/Search.js","components/main/breadcrumb/Breadcrumb.js","components/main/tagList/tag.js","components/main/tagList/tagList.js","components/main/header/Header.js","components/main/loader/Loader.js","components/main/title/Title.js","server/main/api.js","server/main/utilities/index.js","server/main/index.js","components/main/interactions.js","pages/Main.js","components/employee/header/Header.js","components/employee/loader/Loader.js","server/employee/utilities/index.js","components/employee/profile/Profile.js","components/employee/barChart/Dialogue.js","components/employee/barChart/BarChart.js","components/employee/barChart/drawChart.js","components/employee/bubbleChart/BubbleChart.js","components/employee/pieChart/action.js","components/employee/pieChart/Slice.js","components/employee/pieChart/CategoryPieChart.js","components/employee/mobileView/MobileView.js","server/employee/api.js","server/employee/index.js","pages/EmployeeView.js","App.js","serviceWorker.js","index.js"],"names":["sliceHeight","projectHeight","projectRadius","imageSize","imageDistance","projectPadding","Math","PI","clientArcPadding","maxSkills","calculatePieClient","props","radius","arcGenerator","d3","padAngle","cornerRadius","LogoArcGenerator","outerRadius","innerRadius","arcs","sort","value","d","type","hours","pie","annularSectors","console","log","projectSlice","clientSlice","map","i","anchor","path","startAngle","endAngle","centroid","textAnchor","textPos","halfImage","logo","data","projects","filter","project","includes","id","projectSlices","initAngle","angleScale","domain","range","brushedDisplay","calculatePieProject","concat","fill","color","img","highlight","createLinks","skills","highlightedSkills","skill","name","children","length","slice","root","a","b","localeCompare","treeLayout","nodes","node","angle","x","textRotation","anchorText","getInitials","splitted","split","charAt","VizClient","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentShowingProject","height","size","_calculatePieClient","setState","_calculatePieClient2","_ref","_this$props","mouseOnProject","mouseOutProject","_this2","width","clients","react_default","createElement","transform","key","opacity","stroke","fillOpacity","strokeWidth","selected","onMouseOver","mouseOnClient","onMouseOut","mouseOutClient","onClick","clientClick","showProject","clientLogos","text","y","textHighlight","className","xlinkHref","Fragment","React","Component","Employee","circle","maskName","fillMask","image","r","cy","pY","cx","pX","dominantBaseline","fontSize","mouseOnEmployee","VizEmployees","handleMouseOn","currentShowingEmployee","employees","arguments","undefined","setLayout","prevProps","sameEmployees","_ref2","mouseOutEmployee","prevEmpl","nextEmpl","pIds","e","nIds","packLayout","padding","sum","_","flayout","layout","diameter","employeeLayout","vizCircle_Employee","showEmployee","ref","VizCircle","vizClients","vizCircle_VizClient","unHighlightElements","vizCircle_VizEmployees","LegendItem","setText","label","role","onMouseEnter","overEvent","onMouseLeave","outEvent","icon","getObjects","ids","list","union","push","apply","toConsumableArray","Legend","totalClients","totalProjects","totalEmployees","totalSkills","refresh","resetLegends","projectsCount","refreshLegends","equal","client","employee","calculateData","calculateClient","calculateProject","calculateEmployee","p","forEach","brushedProjects","brushedClientIds","clientId","_ref3","_ref4","clientIds","c","prev","current","_this$state","legend_LegendItem","placeholder","process","Dialogue","location","description","dateInit","dateEnd","birthYear","react_router_dom","to","Button","clientName","moment","format","category","roll","src","alt","dialogueIsShown","dialogueInfo","imageDisplay","setImage","setCategory","setName","Range","createSliderWithTooltip","Slider","Filter","getFormatedDate","month","formatDate","pos0","filterPosition","pos1","min","minFilterValue","max","maxFilterValue","defaultValue","defaultValueMin","defaultValueMax","steps","onChange","afterChangeFunction","tipFormatter","margin","VizTimeline","xAxis","monthAxis","yearAxis","ticks","every","scale","xScale","tickPadding","tickSize","monthHeight","tickFormat","refs","barHeight","numLevels","bars","selectProject","level","rx","ry","vizTimeline_Filter","beforeVal","afterVal","filterName","filterLeftValue","filterRightValue","totalProjectsMonths","step","modifyRange","axisMonths","displayTimeline","nextProps","prevState","extent","moreProjects","find","Date","element","j","subElement","search","word","selectedObjects","srchWord","toLowerCase","projectResults","searchType","existsInArray","employeesResults","skillsResults","s","clientsResults","obj","arr","removeItem","item","IArray","o","getIcon","Result","mouseOverHandler","toggleDialogue","getProjectLogo","showObjectInformation","objectSpread","removeObject","removeSelectedObject","clickHandler","clearSearch","onMouseDown","Search","handleChange","results","target","searchWord","focus","removeFromResults","handleClick","contains","handleClickOutside","document","removeEventListener","handleEsc","blur","focusElement","addEventListener","FormControl","index","search_Result","addSelectedObject","Breadcrumb","crumbs","clickedClient","isEqual","breadcrumbClick","bind","Tag","object","tagList","tag","Header","Navbar","variant","expand","Form","inline","onSubmit","preventDefault","search_Search","main_tagList_tagList","breadcrumb_Breadcrumb","Loader","Title","isHighlighted","title","apiRoute","fetchEmployee","_fetchEmployee","_callee","requestURL","options","response","regenerator_default","wrap","_context","next","url","responseType","method","axios","sent","t0","abrupt","status","stop","fetchCustomer","_fetchCustomer","_callee2","_context2","fetchProject","_fetchProject","_callee3","_context3","fetchProjectCount","_fetchProjectCount","_callee4","_context4","maxAnnularSectors","colorThief","ColorThief","getColor","Promise","resolve","reject","Image","onload","dominantColor","parseInt","toString","join","onerror","imageExists","groupCategories","_x","_groupCategories","grouped","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_client","sorted","counter","imageSrc","_clients","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","categories","Symbol","iterator","done","return","finish","t1","keys","t2","trim","replace","t3","t4","getLargestClients","clientList","other","_other$projects","_other$clients","getClients","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","err","dateFormat","load","_load","projectList","employeeList","technologyList","unsortedClients","getData","getTechList","getClientId","getClientColor","updateClient","updateEmployee","getEmployeeList","getDates","_ref5","technologyIdCounter","startDates","endDates","endDate","startDateList","date","endDateList","startDate","endDateSplitted","year","endOf","projectId","employeeId","duration","t","technologies","technology","techObj","Error","firstName","lastName","startYear","endYear","_getDates","floor","diff","asHours","setHighlight","modArray","setHighlightElement","idArray","ifIncludes","setHighlightText","highlightText","unHighlightText","highlightElementWithSkill","projectsHighLight","getElementById","array","brushObjectByDate","objArr","initDate","InBruMonth","OutBruMonth","pInit","getMonthsDifference","pEnd","reCalculateClientHours","IDate","ODate","count","getDateFromStep","add","resetBrushedDisplay","ModArray","setSelectedState","refArray","removeNonRepeatedObj","outArray","objects","inArray","mergeRepeated","inArr","Array","from","Set","addSelected","selectedData","removeSelected","stateData","selectedTagList","selectedClients","selectedEmployees","selectedSkills","selectedProjects","delObj","dataFromSelectedObjects","objs","locations","getDataFromSelectedObjects","getObjectsFromState","getDateRange","initDates","toDate","getBrushedProjectsEmployees","employeesId","window","innerWidth","innerHeight","Main","showSkill","ans","highlightedSectors","highlightedEmployees","filteredEmployees","highlightedProjects","filteredProjects","highligtedSectors","filteredSkills","highlightedProject","modifyDialogueInfo","brushedProjectIds","highlightedEmployee","showClient","eId","highlightedClient","unhighligtedSectors","unhighlightedProjects","unhighlightedEmployees","unhighlightedSkills","toggle","allObjects","filteredObjects","filteredClients","selectedState","filteredSelectedObjects","newSelectedObject","brushDates","initMonth","enMonth","datesBrushed","getDateFormated","highlightElements","resetClickedClient","skillList","setClickedClient","currentView","containsCategory","isLoading","isMobileView","initialDates","elementOver","info","annularSector","resize","selectedRange","totalMonths","mobileView","header","header_Header","title_Title","legend","legend_Legend","dialogue","dialogue_Dialogue","timeline","vizTimeline_VizTimeline","vizCircle","vizCircle_VizCircle","loader_Loader","history","goBack","categoryImageGetter","imagePath","skillsLogoGetter","colorGetter","logoUrl","Profile","ev","_this$props$profile","profile","profileImageGetter","Container","Row","Col","onError","addDefaultSrc","BarChart","recentData","chart","rangeBands","cummulative","companyName","returnValue","values","svg","append","attr","y_category","rangeRound","y_defect","y_category_domain","bandwidth","ceil","projectPeriod","style","category_g","selectAll","enter","on","groupedProjects","assertThisInitialized","barChart_Dialogue","BubbleChart","onClicked","currentCategory","drawBubble","focusedNode","categoryDataList","countCat","body","clientWidth","centerX","centerY","pack","forceCollide","simulation","force","strength","leaves","R","G","B","cat","select","remove","active","alphaTarget","restart","fx","fy","transition","ease","tween","String","classed","currentNode","stopPropagation","newColorR","newColorG","newColorB","currentTarget","lastNode","irl","ix","iy","ir","legendList","catValue","firstCategory","showData","categoryBtn","rgbColor","backgroundColor","calculatePercentage","projectCategoryNames","percentage","projectCategoryPercentages","getCategoryLogoColor","arrayColor","categoryLogo","Slice","arc","CategoryPieChart","d3Data","d3Color","data_ready","Slice_Slice","MobileView","api_URL","fetchData","_fetchData","employeeApiRequest","server_employee_getData","projectsBarChart","tech","_i","_technology","asMonths","t5","entries","employeeProfile","projectsBarChartData","match","params","mobileView_MobileView","employee_loader_Loader","employee_header_Header","xs","md","Profile_Profile","CategoryPieChart_CategoryPieChart","barChart_BarChart","bubbleChart_BubbleChart","App","react_router","exact","render","EmployeeView","pages_Main","Boolean","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27fbfcea.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nconst sliceHeight = 50;\nconst projectHeight = 25;\nconst projectRadius = sliceHeight / 2;\nconst imageSize = 40;\nconst imageDistance = 40;\nconst projectPadding = (2 * Math.PI) / 180;\nconst clientArcPadding = (1.2 * Math.PI) / 180;\nconst maxSkills = 40;\n\n//Create a pie chart with the clients total time in a project\nexport function calculatePieClient(props, radius) {\n  //arc generator for clients\n  const arcGenerator = d3\n    .arc()\n    .padAngle(clientArcPadding) //pad angle defines the distance between each arc\n    .cornerRadius(4); //cornerRadius\n\n  //arc generator for the Text labels\n  const LogoArcGenerator = d3\n    .arc()\n    .outerRadius(radius + imageDistance)\n    .innerRadius(radius + imageDistance);\n\n  //PIE object to calculate the arc distribution\n  const pie = d3\n    .pie()\n    .sort(null)\n    .value(function (d) {\n      return d.type === 'category' ? 3 : d.hours;\n    });\n  //arc array with the position and information in the pie\n  const arcs = pie(props.annularSectors);\n  console.log(props.annularSectors);\n\n    //create an object SLICES in order to update the state\n  //contains all the information one slice needs in order to be rendered\n  let projectSlice = [];\n  const clientSlice = arcs.map((d, i) => {\n    const path = arcGenerator({\n      startAngle: d.startAngle,\n      endAngle: d.endAngle,\n      innerRadius: radius - sliceHeight,\n      outerRadius: radius\n    });\n\n    const centroid = LogoArcGenerator.centroid(d);\n    //calculate the anchor point of the image depending on its position on the center\n    let anchor = centroid;\n    let textAnchor = 'start';\n    let textPos = centroid;\n    const textPaddingSides = 10;\n    const textPaddingUp = 5;\n    const halfImage = imageSize / 2;\n    anchor = [centroid[0] - halfImage, centroid[1] - halfImage];\n\n    if (anchor[0] > 0 && anchor[1] < 0) {\n      textPos = [centroid[0] + halfImage + textPaddingSides, centroid[1]];\n    } else if (anchor[0] < 0 && anchor[1] < 0) {\n      textPos = [centroid[0] - halfImage - textPaddingSides, centroid[1] + textPaddingUp];\n      textAnchor = 'end';\n    } else if (anchor[0] < 0 && anchor[1] > 0) {\n      textPos = [centroid[0] - halfImage - textPaddingSides, centroid[1] + textPaddingUp];\n      textAnchor = 'end';\n    } else if (anchor[0] > 0 && anchor[1] > 0) {\n      textPos = [centroid[0] + halfImage + textPaddingSides, centroid[1]];\n    }\n\n\n    const logo = {\n      centroid: anchor\n    };\n\n    if (d.data.type === 'client') {\n      const projects = props.projects.filter(project => d.data.projects.includes(project.id));\n      // const projects = getObjects(d.data.projects, props.projects);\n      const projectSlices = calculatePieProject(\n        d.startAngle + projectPadding,\n        d.endAngle - projectPadding,\n        projects,\n        radius\n      );\n      projectSlice = projectSlice.concat(projectSlices);\n    }\n\n    return {\n      path,\n      fill: d.data.color,\n      logo,\n      textAnchor: textAnchor,\n      textPos: textPos,\n      img: d.data.logo,\n      id: d.data.id,\n      highlight: d.data.highlight,\n      data: d.data,\n    };\n  });\n\n  return { clientSlice, projectSlice };\n}\n\n//add to the state slices of clients to draw\nfunction calculatePieProject(initAngle, endAngle, projects, radius) {\n  const angleScale = d3\n    .scaleLinear()\n    .domain([0, 2 * Math.PI])\n    .range([initAngle, endAngle]);\n  //arc generator for clients\n  const arcGenerator = d3\n    .arc()\n    .padAngle(0.013) //pad angle defines the distance between each arc\n    .cornerRadius(50); //cornerRadius\n  //PIE object to calculate the arc distribution\n  const pie = d3\n    .pie()\n    .sort(null)\n    .value(function (d) {\n      return d.brushedDisplay ? d.hours : 0;\n    });\n\n  //arc array with the position and information in the pie\n  const arcs = pie(projects);\n\n  //create an object SLICES in order to update the state\n  //contains all the information one slice needs in order to be rendered\n  const slices = arcs.map((d) => {\n    const path = arcGenerator({\n      startAngle: angleScale(d.startAngle),\n      endAngle: angleScale(d.endAngle),\n      innerRadius: radius - projectRadius - projectHeight / 2,\n      outerRadius: radius - projectRadius + projectHeight / 2,\n    });\n    d.path = path;\n    return d;\n  }).filter(d => d.data.brushedDisplay);\n  return slices;\n}\n\n//Create a hierarchy and sort it alphabetically\nexport function createLinks(skills) {\n  const highlightedSkills = skills.filter(skill => skill.highlight === true);\n  const children = highlightedSkills.length > maxSkills ? skills.slice(0, maxSkills) : highlightedSkills;\n  const skillsData = {\n    name: 'Front-End',\n    children\n  };\n\n  const data = skillsData;\n  const root = d3\n    .hierarchy(data)\n    .sort((a, b) => a.data.name.localeCompare(b.data.name));\n  const treeLayout = d3.tree();\n  const angleScale = d3\n    .scaleLinear()\n    .domain([0, 1])\n    .range([0, 360]);\n  const nodes = treeLayout(root);\n\n  for (let i in nodes.children) {\n    let node = nodes.children[i];\n    node.angle = angleScale(node.x); //set angle in radians\n    node.textRotation = -node.angle;\n    node.anchorText = node.angle < 90 || node.angle > 270 ? 'start' : 'end';\n\n  }\n\n  return nodes;\n}\n\nexport function calculateEmployee() {\n  const circle = {\n    radius: '28',\n    fill: '#98abc5',\n    x: '0',\n    y: '0'\n  };\n\n  return { circle };\n}\n\nexport function getInitials(name) {\n  const splitted = name.split(' ');\n  return `${splitted[0].charAt(0)}.${splitted[splitted.length - 1].charAt(0)}`;\n}\n\nexport default {\n  calculatePieClient,\n  createLinks,\n  calculateEmployee,\n  getInitials\n};\n","import React from 'react';\nimport { calculatePieClient } from './actions';\n\nconst vizHeight = 0.67;\nconst imageSize = 40;\n\nclass VizClient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientSlice: [], //array of svg path commands, repepresenting each client\n      projectSlice: [], //array of svg path commands, representing projects,\n      currentShowingProject: null,\n    };\n  }\n\n  componentDidMount() {\n    const height = this.props.size[1];\n    const radius = height - height * vizHeight;\n    const { clientSlice, projectSlice } = calculatePieClient(this.props, radius);\n    this.setState({ clientSlice, projectSlice, radius });\n  }\n\n  componentWillReceiveProps(props) {\n    const { clientSlice, projectSlice } = calculatePieClient(props, this.state.radius);\n    this.setState({ clientSlice, projectSlice });\n  }\n\n  showProject({ data }) {\n    const {\n      currentShowingProject\n    } = this.state;\n    const {\n      mouseOnProject,\n      mouseOutProject,\n    } = this.props;\n\n    if (currentShowingProject !== data.id) {\n      mouseOutProject();\n      mouseOnProject(data.id);\n      this.setState({ currentShowingProject: data.id });\n    } else {\n      mouseOutProject();\n      this.setState({ currentShowingProject: null });\n    }\n  }\n\n  render() {\n    const width = this.props.size[0];\n    const height = this.props.size[1];\n    const clients = <g transform={`translate(${width / 2}, ${height / 2})`}>\n      {this.state.clientSlice.map((d, i) => (\n        <g key={i} opacity={d.highlight ? '1' : '0.2'}>\n          <path\n            d={d.path}\n            stroke='#dc3545'\n            fillOpacity='0'\n            strokeWidth=\"6\"\n            opacity={d.data.hours > 0 ? d.data.selected ? 1 : 0 : 0}\n          />\n          {d.data.type === 'category' ?\n          <path\n            d={d.path}\n            fill={d.fill}\n            onMouseOver={() => { this.props.mouseOnClient(d.id); }}\n            onMouseOut={() => this.props.mouseOutClient()}\n            onClick={() => this.props.clientClick(d.data)}\n          /> :   <path\n            d={d.path}\n            fill={d.fill}\n            onClick={() => this.props.clientClick(d.data)}\n          /> }\n\n        </g>\n      ))}\n    </g>;\n    const projects = <g transform={`translate(${width / 2}, ${height / 2})`}>\n      {this.state.projectSlice.map((d, i) => (\n        <g key={i} opacity={d.data.highlight ? '1' : '0.2'}>\n          <path\n            d={d.path}\n            stroke='#dc3545'\n            fillOpacity='0'\n            strokeWidth=\"6\"\n            opacity={d.data.selected ? 1 : 0}\n          />\n          <path\n            d={d.path}\n            fill='#FFFFFF'\n            // onMouseOver={() => this.props.mouseOnProject(d.data.id)} //TO DO:organize DATA array \n            // onMouseOut={() => this.props.mouseOutProject()}\n            onClick={() => this.showProject(d)}\n          />\n        </g>\n      ))}\n    </g>;\n    const clientLogos = <g transform={`translate(${width / 2}, ${height / 2})`}>\n      {this.state.clientSlice.map((d, i) => {\n        const text = d.data.type === 'category' || d.data.type === 'more' ? <text\n          x={d.textPos[0]}\n          y={d.textPos[1]}\n          opacity={d.data.textHighlight ? '1' : '0'}\n          textAnchor={d.textAnchor}\n          fill={d.fill}\n          // onMouseOver={() => { this.props.mouseOnClient(d.id); }}\n          // onMouseOut={() => this.props.mouseOutClient()}\n          onClick={() => this.props.clientClick(d.data)}\n          className='label'\n        >\n          {d.data.name}\n        </text> : <g></g>;\n        return d.data.hours > 0 ? <g key={i}>\n          < image\n            key={i}\n            width={imageSize}\n            height={imageSize}\n            x={d.logo.centroid[0]}\n            y={d.logo.centroid[1]}\n            xlinkHref={d.img}\n            opacity={d.highlight ? '1' : '0.2'}\n            // onMouseOver={() => { this.props.mouseOnClient(d.id); }}\n            // onMouseOut={() => this.props.mouseOutClient()}\n            onClick={() => this.props.clientClick(d.data)}\n          />\n          {text}\n        </g> : '';\n      })}\n    </g>;\n    return (\n      <React.Fragment>\n        {clients}\n        {clientLogos}\n        {projects}\n      </React.Fragment>\n    );\n  }\n}\nexport default VizClient;\n","import React from 'react';\nimport { calculateEmployee, getInitials } from './actions';\n\nclass Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.setState({ circle: calculateEmployee() });\n  }\n\n  render() {\n    const circle = this.state.circle ? this.state.circle : null;\n    //create a unique id for each image mask\n    const maskName = 'mask' + this.props.id;\n    const fillMask = 'url(#mask' + this.props.id + ')';\n    const image = !this.props.img ?\n      <text\n        textAnchor='middle'\n        x={this.props.pX}\n        y={this.props.pY + 1}\n        dominantBaseline='middle'\n        fontSize={this.props.radius}\n        className='initials'\n      > \n        {getInitials(this.props.name)}\n      </text> :\n      <circle\n        r={this.props.radius}\n        cy={this.props.pY}\n        cx={this.props.pX}\n        fill={fillMask}\n      />;\n    const selected = this.props.selected ? <circle\n      cx={this.props.pX}\n      cy={this.props.pY}\n      r={this.props.radius}\n      stroke='#dc3545'\n      fillOpacity='0'\n      strokeWidth=\"3\"\n    /> : '';\n    return (\n      < g >\n        {\n          circle ? (\n            <g\n              onClick={() => this.props.mouseOnEmployee(this.props.id)}\n              //onMouseOver={() => this.props.mouseOnEmployee(this.props.id)}\n              //onMouseOut={() => this.props.mouseOutEmployee()}\n              opacity={this.props.opacity}\n            >\n\n              <circle\n                cx={this.props.pX}\n                cy={this.props.pY}\n                r={this.props.radius}\n                fill={circle.circle.fill}\n              />\n\n              <g>\n                <defs id='imgdefs'>\n                  <pattern id={maskName} height='1' width='1' x='0' y='0'>\n                    <image\n                      height={this.props.radius * 2}\n                      width={this.props.radius * 2}\n                      xlinkHref={this.props.img}\n                    />\n                  </pattern>\n                </defs>\n                {image}\n                {selected}\n              </g>\n            </g>\n\n          ) : (\n            <h4>No image</h4>\n          )}\n      </g >\n    );\n  }\n}\n\nexport default Employee;\n","import React from 'react';\nimport Employee from './Employee';\nimport * as d3 from 'd3';\n\nconst vizHeight = 0.58;\n\nclass VizEmployees extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentShowingEmployee: null\n    };\n  }\n\n  componentDidMount({ employees } = this.props) {\n    this.setLayout(employees);\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log(this.props.employees.filter(e => e.brushedDisplay))\n    if (!this.sameEmployees(prevProps.employees, this.props.employees)) {\n      this.setLayout(this.props.employees);\n    }\n  }\n\n  showEmployee({ data }){\n    const { currentShowingEmployee } = this.state;\n    const { mouseOnEmployee, mouseOutEmployee } = this.props;\n  \n    if(currentShowingEmployee !== data.id){\n      mouseOutEmployee();\n      mouseOnEmployee(data.id);\n      this.setState({ currentShowingEmployee: data.id})\n    } else { \n      mouseOutEmployee();\n      this.setState({ currentShowingEmployee: null });\n    }\n    \n  }\n\n  sameEmployees(prevEmpl, nextEmpl) {\n\n    if (prevEmpl.length !== nextEmpl.length) return false;\n    let pIds = prevEmpl.map(e => e.id);\n    let nIds = prevEmpl.map(e => e.id);\n    return pIds.filter(id => !nIds.includes(id)).length === 0;\n  }\n\n  //Set a hierarchy to the data\n  //creates a PACK Layout, calculates and sets all the attributes for the layout\n  //Set the layout in the state\n  setLayout(employees) {\n    const root = d3.hierarchy({\n      name: 'employees',\n      children: employees\n    });\n\n    const height = this.props.size[1];\n    const width = height - height * vizHeight;\n    const packLayout = d3.pack();\n    packLayout.size([width, width]);\n    packLayout.padding(10);\n    root.sum(_ => 50);\n    const flayout = packLayout(root);\n    this.setState({ layout: flayout });\n  }\n\n  handleMouseOn = (d) => {\n    if (d.data.brushedDisplay) {\n      this.props.mouseOnEmployee(d.data.id);\n    }\n  }\n  render() {\n    //Get the size and diameter of the viz\n    const width = this.props.size[0];\n    const height = this.props.size[1];\n    const diameter = height - height * vizHeight;\n\n    //Create the Employee object with the photo\n    const employeeLayout =\n      this.state.layout !== undefined ? (\n        this.state.layout.children.map((d, i) => {\n          return (\n            <Employee\n              key={i}\n              name={d.data.name}\n              img={d.data.img}\n              radius={d.r}\n              selected={d.data.selected}\n              pX={d.x}\n              pY={d.y}\n              id={d.data.id}\n              mouseOnEmployee={() => this.showEmployee(d)} \n              //mouseOnEmployee={() => this.handleMouseOn(d)}\n              //mouseOutEmployee={this.props.mouseOutEmployee}\n              opacity={d.data.highlight ? d.data.brushedDisplay ? '1' : '0.1' : '0.1'}\n            />\n          );\n        })\n      ) : '';\n\n    //return all the things to render\n    return (\n      // MOVE the GRAPHIC OBJECT TO THE CENTER\n      <g\n        ref=\"employees\"\n        transform={`translate(${width / 2 - diameter / 2}, ${height / 2 -\n          diameter / 2})`}\n      >\n        {/* BACKGROUND CIRCLE */}\n        < g ref='graph' >\n          {employeeLayout}\n        </g >\n      </g >\n    );\n  }\n}\n\nexport default VizEmployees;\n","import React from 'react';\nimport VizClient from './VizClient';\nimport VizEmployees from './VizEmployees';\nimport Skills from './Skills';\n\n//VizCircle is in charge of taking all the raw data and\n//calculate with D3 how to draw the visualization in SVG\n//renders the SVG visaulization\nclass VizCircle extends React.Component {\n  render() {\n    const vizClients = <VizClient\n      annularSectors={this.props.annularSectors}\n      clients={this.props.clients}\n      projects={this.props.projects}\n      size={this.props.size}\n      mouseOnProject={this.props.mouseOnProject}\n      mouseOutProject={this.props.unHighlightElements}\n      mouseOnClient={this.props.mouseOnClient}\n      mouseOutClient={this.props.unHighlightElements}\n      clientClick={this.props.clientClick}\n    />;\n    const employees = this.props.employees.length > 0 ? < VizEmployees\n      employees={this.props.employees}\n      size={this.props.size}\n      mouseOnEmployee={this.props.mouseOnEmployee}\n      mouseOutEmployee={this.props.unHighlightElements}\n    /> : '';\n    const content =\n      <svg className='circle-visualization' width={this.props.size[0]} height={this.props.size[1]}>\n        {vizClients}\n        {employees}\n        {/* <Skills\n          skills={this.props.skills}\n          size={this.props.size}\n        /> */}\n      </svg>;\n\n    return content;\n  }\n}\n\n\nexport default VizCircle;\n","import React from 'react';\nimport { createLinks } from './actions';\n\nconst distance = 0.15;\n\nclass Skills extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: {}\n    };\n  }\n\n  componentDidMount() {\n    const nodes = createLinks(this.props.skills);\n    this.setState({\n      nodes\n    });\n  }\n  \n  componentWillReceiveProps(props) {\n    const nodes = createLinks(props.skills);\n    this.setState({\n      nodes\n    });\n  }\n\n  render() {\n    const width = this.props.size[0];\n    const height = this.props.size[1];\n    const radius = (height - height * distance) / 2;\n   \n    return (\n      <g transform={`translate(${width / 2}, ${height / 2})`}>\n        {this.state.nodes.children !== undefined ? (\n          this.state.nodes.children.map((d, i) => {\n            return (\n              <g\n                className='skills'\n                key={i}\n                transform={`rotate(${d.angle}) translate(${radius})`}\n              >\n                <text\n                  className={d.data.selected ? 'text-selected' : ''}\n                  key={i}\n                  cx={d.txtPosX}\n                  dy=\".31em\"\n                  transform={`rotate(${d.textRotation}) `}\n                  textAnchor={d.anchorText}\n                >\n                  {d.data.name}\n                </text>\n              </g>\n            );\n          })\n        ) : (\n          <g />\n        )}\n      </g>\n    );\n  }\n}\n\nexport default Skills;\n","import React from 'react';\n\nclass LegendItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: 0,\n      text: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      type: this.props.type,\n      text: this.setText(this.props.data, this.props.label)\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) \n      this.setState({\n        text: this.setText(this.props.data, this.props.label)\n      });\n  }\n\n  setText(data, label) {\n    let text = `${data} ${label}`;\n    if (data !== 1) \n      if (label.charAt(label.length - 1) === 's') text += '\\'';\n      else text += 's'; \n    return text;\n  } \n\n\n  render() {\n    return (\n      <li className='legend-item'>\n        <div\n          role=\"menuitem\"\n          className={'thing'}\n          onMouseEnter={() => this.props.overEvent(this.props.type)}\n          onMouseLeave={() => this.props.outEvent()}\n        >\n          <i className={this.props.icon}/>\n          {this.state.text}\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default LegendItem;","export function getObjects(ids, list) {\n  return ids.map(id => list[id]);\n}\n\n/*\n* Merge two primitive arrays.\n* Resulting array consists of unique elements from input arrays. \n*/\nexport function union(a, b) {\n  a.push(...b.filter(e => !a.includes(e)));\n}\n\nexport default {\n  getObjects,\n  union\n};","import React from 'react';\nimport LegendItem from './LegendItem';\nimport { union } from 'components/main/general';\n\nclass Legend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalClients: 0,\n      totalProjects: 0,\n      totalEmployees: 0,\n      totalSkills: 0,\n      refresh: false\n    };\n  }\n\n  componentDidMount() {\n    this.resetLegends(this.props);\n    this.setState({totalProjects: this.props.projectsCount})\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.refreshLegends !== this.props.refreshLegends) this.resetLegends(this.props);\n    if (!this.equal(prevProps.client, this.props.client) ||\n      !this.equal(prevProps.project, this.props.project) ||\n      !this.equal(prevProps.employee, this.props.employee)\n      ) {\n      if (this.props.client || this.props.project || this.props.employee)\n        this.calculateData(this.props);\n      else\n        this.resetLegends(this.props);\n    }\n  }\n\n  calculateData(props) {\n    let { client, project, employee } = props;\n    if (client) this.calculateClient(props);\n    if (project) this.calculateProject(props);\n    if (employee) this.calculateEmployee(props);\n  }\n\n  calculateClient({ client, projects }) {\n    const brushedProjects = projects.filter(p => p.brushedDisplay);\n    const totalProjects = brushedProjects.filter(p => client.projects.includes(p.id));\n    const totalEmployees = [];\n    const totalSkills = [];\n    totalProjects.forEach(p => {\n      union(totalEmployees, p.employees);\n      union(totalSkills, p.skills);\n    });\n\n    this.setState({\n      totalClients: 1,\n      totalProjects: totalProjects.length,\n      totalEmployees: totalEmployees.length,\n      totalSkills: totalSkills.length\n    });\n  }\n\n  calculateEmployee({ employee, clients, projects }) {\n    const brushedProjects = projects.filter(project => \n      project.employees.includes(employee.id) && project.brushedDisplay);\n    const brushedClientIds = brushedProjects.map(p => p.clientId);\n    const totalClients = clients.filter(client => \n      client.employees.includes(employee.id) && brushedClientIds.includes(client.id)).length;\n    const totalSkills = employee.skills.length;\n    this.setState({\n      totalClients, \n      totalProjects: brushedProjects.length,\n      totalEmployees: 1,\n      totalSkills\n    });\n  }\n\n  calculateProject({ project }) {\n    this.setState({\n      totalClients: 1,\n      totalProjects: 1,\n      totalEmployees: project.employees.length,\n      totalSkills: project.skills.length,\n    });\n  }\n\n  resetLegends({ clients, projects, employees }) {\n    const brushedProjects = projects.filter(p => p.brushedDisplay);\n    const totalEmployees = employees.filter(e => e.brushedDisplay);\n    const clientIds = brushedProjects.map(p => p.clientId);\n    const totalClients = clients.filter(c => clientIds.includes(c.id)).length;\n    const totalSkills = [];\n    brushedProjects.forEach(p => union(totalSkills, p.skills));\n    employees.forEach(e => union(totalSkills, e.skills));\n    this.setState({\n      totalClients,\n      totalProjects: brushedProjects.length,\n      totalEmployees: totalEmployees.length,\n      totalSkills: totalSkills.length\n    });\n  }\n\n  equal(prev, current) {\n    if (prev !== current) return false;\n    if (prev === current) return true;\n    if (prev.id !== current.id && prev.type !== current.type) return false;\n    return true;\n  }\n\n  render() {\n    let {\n      totalEmployees,\n      totalClients,\n      totalProjects,\n      totalSkills,\n    } = this.state;\n\n    return (\n      <div className='legend'>\n        <ul>\n          <LegendItem\n            data={totalClients}\n            type='CLIENTS'\n            label='client'\n            overEvent={this.props.overEvent}\n            outEvent={this.props.outEvent}\n            icon='fas fa-building'\n          />\n          <LegendItem\n            data={totalProjects}\n            type='PROJECTS'\n            label='project'\n            overEvent={this.props.overEvent}\n            outEvent={this.props.outEvent}\n            icon='fas fa-square'\n          />\n          <LegendItem\n            data={totalEmployees}\n            type='EMPLOYEES'\n            label='employee'\n            overEvent={this.props.overEvent}\n            outEvent={this.props.outEvent}\n            icon='fas fa-user'\n          />\n          <LegendItem\n            data={totalSkills}\n            type='SKILLS'\n            label='skill'\n            overEvent={this.props.overEvent}\n            outEvent={this.props.outEvent}\n            icon='fas fa-wrench'\n          />\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Legend;\n","import React from 'react';\nimport moment from 'moment';\nimport { Button } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nconst format = 'YYYY-MM-DD';\nconst placeholder = `${process.env.PUBLIC_URL}/img/employees/employee_placeholder.jpg`;\n\nclass Dialogue extends React.Component {\n\n  setText(data, type) {\n    switch (type) {\n      case 'CLIENT':\n        return (\n          <div>\n            <p><span className='bold'>Location: </span><br></br>{data.location}</p>\n            <p>{data.description}</p>\n          </div>\n        );\n      case 'EMPLOYEE':\n        return (\n          <div>\n            <p><span className='bold'>Start date: </span><br></br>{data.dateInit}</p>\n            <p><span className='bold'>End date: </span><br></br>{data.dateEnd}</p>\n            <p><span className='bold'>Location: </span><br></br>{data.location}</p>\n            <p><span className='bold'>Birthyear: </span><br></br>{data.birthYear}</p>\n            <Link to={`/employeeview/${data.id}`}><Button>READ MORE</Button></Link>\n\n          </div>\n        );\n      case 'PROJECT':\n        return ( \n          <div>\n            <p><span className='bold'>Client: </span><br></br>{data.clientName}</p>\n            <p><span className='bold'>Start date: </span><br></br>{moment(data.dateInit).format(format)}</p>\n            <p><span className='bold'>End date: </span><br></br>{moment(data.dateEnd).format(format)}</p>\n            <p>{data.description}</p>\n          </div>\n        );\n      default:  \n        return <div/>;\n    }\n  }\n\n  setName(data, type) {\n    switch (type) {\n      case 'CLIENT':\n        return data.name;\n      case 'EMPLOYEE':\n      case 'PROJECT':\n        return data.name;\n      default:\n        return '';\n    }\n  }\n\n  setCategory(data, type) {\n    switch (type) {\n      case 'CLIENT':\n        return data.category;\n      case 'EMPLOYEE':\n        return data.roll;\n      case 'PROJECT':\n        return data.type;\n      default:\n        return '';\n    }\n  }\n\n  setImage(data, type) {\n    switch (type) {\n      case 'CLIENT':\n      case 'PROJECT':\n        return <img src={data.logo} alt={data.name} />;\n      case 'EMPLOYEE':\n        return <img src={data.img ? data.img : placeholder} alt={data.name} />;\n      default:\n        return <i className=\"fas fa-laptop-code\"></i>;\n    }\n  }\n\n  render() {\n    const { dialogueIsShown, dialogueInfo } = this.props;\n    const { data, type } = dialogueInfo;\n    const imageDisplay = data ? this.setImage(data, type) : <i className=\"fas fa-laptop-code\"></i> ;\n    const text = data ? this.setText(data, type) : <div />;\n    const category = data ? this.setCategory(data, type) : '';\n    const name = data ? this.setName(data, type) : '';\n    return (\n      <div>\n        <div className={dialogueIsShown ? 'dialogue' : 'dialogue hidden'}>\n          <div className='identification'>\n            {imageDisplay}\n            <div className=\"spacing x-small\"></div>\n            <h2>{name}</h2>\n            <p>{category}</p>\n          </div>\n          <div className='information'>\n            {text}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dialogue;\n","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\n\n\n\nclass Filter extends Component {\n\n  getFormatedDate = (month) => {\n    return this.props.formatDate(month);\n  }\n  render() {\n    const pos0 = this.props.filterPosition[0];\n    const pos1 = this.props.filterPosition[1];\n    return (\n      <div className=\"filter\">\n        <Range\n          min={this.props.minFilterValue}\n          max={this.props.maxFilterValue}\n          defaultValue={[this.props.defaultValueMin, this.props.defaultValueMax]}\n          value={[pos0, pos1]}\n          steps={1}\n          onChange={(value) => this.props.afterChangeFunction(value[0], value[1])}\n          tipFormatter={(value) => this.getFormatedDate(value)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport Filter from './Filter';\nimport * as d3 from 'd3';\n\nconst margin = { top: 20, right: 50, bottom: 30, left: 50 };\nconst height = 100;\nconst heightProject = 10;\n\n\nclass VizTimeline extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  xAxis = d3.axisBottom();\n  monthAxis = d3.axisTop();\n  yearAxis = d3.axisTop();\n\n  componentDidMount() {\n    this.setState({\n    });\n  }\n\n  //create all the data necessary for the timeline visualization and set it up in the state\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let { annularSectors, projects, size, range } = nextProps;\n    if (!projects) return {};\n\n    const extent = range;\n    const xScale = d3\n      .scaleTime()\n      .domain(extent)\n      .range([0, size[0] - margin.right - margin.left]);\n\n\n    //calculate all the bars \n    const moreProjects = annularSectors.find(client => client.type === 'more');\n    if (moreProjects)\n      projects = projects.filter(project => !moreProjects.projects.includes(project.id));\n    const bars = projects.map(d => {\n      return {\n        x: margin.left + xScale(new Date(d.dateInit)),\n        y: height - margin.bottom,\n        width: (xScale(d.dateEnd) - xScale(d.dateInit)),\n        height: heightProject,\n        fill: !d.highlight ? '#333333' : d.color,\n        level: 0,\n        id: d.id,\n        opacity: d.highlight ? '1' : '0.2',\n        selected: d.selected,\n        brushedDisplay: d.brushedDisplay\n      };\n    });\n    let numLevels = 0;\n    // organize the projects so they do not overlap\n    for (let i = 0; i < bars.length; i++) {\n      const element = bars[i];\n      let level = element.level;\n      for (let j = i - 1; j >= 0; j--) {\n        const subElement = bars[j];\n        if (element.x <= subElement.width + subElement.x) {\n          //check if the elements overlaps with the subelement \n          //and push it a level up\n          if (level === subElement.level) {\n            level += 1;\n          } else if (subElement.level > level) {\n            level = subElement.level + 1;\n          }\n          element.level = level;\n          numLevels = Math.max(level, numLevels);\n        }\n      }\n    }\n\n    return { bars, xScale, numLevels };\n\n  }\n  //add the axis of the visualization directly with d3\n  componentDidUpdate() {\n\n    this.xAxis.ticks(d3.timeYear.every(1));\n    this.xAxis.scale(this.state.xScale);\n    this.xAxis.tickPadding(10);\n    this.xAxis.tickSize(0);\n\n    const monthHeight = this.props.projects.length > 0 ? height - margin.bottom : 0;\n    this.monthAxis.tickFormat('');\n    this.monthAxis.tickSize(monthHeight);\n    this.monthAxis.ticks(d3.timeMonth.every(1));\n    this.monthAxis.scale(this.state.xScale);\n\n    this.yearAxis.tickFormat('');\n    this.yearAxis.tickSize(monthHeight);\n    this.yearAxis.ticks(d3.timeYear.every(1));\n    this.yearAxis.scale(this.state.xScale);\n\n    d3.select(this.refs.xAxis).call(this.xAxis);\n    d3.select(this.refs.monthAxis).call(this.monthAxis);\n    d3.select(this.refs.yearAxis).call(this.yearAxis);\n\n  }\n\n  render() {\n    const barHeight = this.state.numLevels === 0 ? (height / 4) : (height - margin.bottom) / (this.state.numLevels + 1);\n    const projects = this.state.bars.map((d) => (\n      <g key={d.id}\n        opacity={d.brushedDisplay ? d.opacity : 0.2}\n        onMouseOver={() => {\n          if (!d.brushedDisplay) {\n            return;\n          } else {\n            this.props.selectProject(d.id);\n          }\n        }}\n        onMouseOut={() => this.props.mouseOutProject()}>\n        {/* SELECTED STROKE */}\n        <rect\n          x={d.x}\n          y={d.y - barHeight - (barHeight * d.level)}\n          rx=\"5\"\n          ry=\"5\"\n          width={d.width}\n          height={barHeight}\n          fill={d.fill}\n        />\n        {/*PROJECT RECT  */}\n        <rect\n          x={d.x + 1}\n          y={d.y - barHeight - (barHeight * d.level) + 1}\n          rx=\"5\"\n          ry=\"5\"\n          width={d.width - 1}\n          height={barHeight - 1}\n          stroke='#dc3545'\n          fillOpacity='0'\n          strokeWidth=\"3\"\n          opacity={d.selected ? 1 : 0}\n        />\n      </g>\n    ));\n\n    const filter = <Filter\n      beforeVal=\"\"\n      afterVal=\"\"\n      filterName=\"Time\"\n      filterLeftValue=\"\"\n      filterRightValue=\"\"\n      minFilterValue={0}\n      maxFilterValue={this.props.totalProjectsMonths}\n      defaultValueMin={0}\n      defaultValueMax={this.props.totalProjectsMonths}\n      step={1}\n      afterChangeFunction={this.props.modifyRange}\n      filterPosition={this.props.filterPosition}\n      formatDate={this.props.formatDate}\n    />;\n    const axisMonths = <g className='axisMonths' ref=\"monthAxis\" transform={`translate(${margin.left}, ${height - margin.bottom})`} />;\n    const yearAxis = <g className='yearAxis' ref=\"yearAxis\" transform={`translate(${margin.left}, ${height - margin.bottom})`} />;\n    const xAxis = <g ref=\"xAxis\" transform={`translate(${margin.left}, ${height - margin.bottom})`} />;\n    return (\n      <React.Fragment>\n        < div className={this.props.displayTimeline ? 'timeLine' : 'timeLine hidden'} >\n          <svg width={this.props.size[0]} height={height} >\n            {axisMonths}\n            {xAxis}\n            {yearAxis}\n            {projects}\n          </svg>\n          {filter}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default VizTimeline;","import React from 'react';\n/**\n * \n * @param {string} word value to search in employees, clients, projects and skills  \n * @param {props} props contains all the state employees, projects, skills and clients to search \n */\nexport function search(word, props) {\n  const { projects, employees, skills, clients, selectedObjects } = props;\n  const srchWord = word.toLowerCase();\n\n  if (srchWord.length > 0 && srchWord !== '' && srchWord !== ' ') {\n\n    //search in projects\n    const projectResults = projects.filter(p => {\n      const name = p.name.toLowerCase();\n      p.searchType = 'PROJECT';\n      return name.includes(srchWord) && !existsInArray(p, selectedObjects); //check if it exists in tag list. send obj\n    });\n    //search in results\n    const employeesResults = employees.filter(e => {\n      const name = e.name.toLowerCase();\n      e.searchType = 'EMPLOYEE';\n      return name.includes(srchWord) && !existsInArray(e, selectedObjects);\n    });\n    //search in skills\n    const skillsResults = skills.filter(s => {\n      const name = s.name.toLowerCase();\n      s.searchType = 'SKILL';\n      return name.includes(srchWord) && !existsInArray(s, selectedObjects);\n    });\n    //search in clients\n    const clientsResults = clients.filter(c => {\n      const name = c.name.toLowerCase();\n      c.searchType = 'CLIENT';\n      return name.includes(srchWord) && !existsInArray(c, selectedObjects);\n    });\n    return [...projectResults, ...employeesResults, ...skillsResults, ...clientsResults];\n  } else {\n    return [];\n  }\n}\n\nfunction existsInArray(obj, arr) {\n  return arr.find(e => e.id === obj.id && e.searchType === obj.searchType);\n}\n\nexport function removeItem(item, IArray) {\n  return IArray.filter(o => o.id !== item.id && o.searchType !== item.searchType);\n}\n\nexport function getIcon(item) {\n  switch (item.searchType) {\n    case 'EMPLOYEE':\n      return <i className=\"fas fa-user\"></i>;\n    case 'CLIENT':\n      return <i className=\"fas fa-building\"></i>;\n    case 'PROJECT':\n      return <i className=\"fas fa-square\"></i>;\n    case 'SKILL':\n      return <i className=\"fas fa-wrench\"></i>;\n    default:\n      return <i className=\"fas fa-question-circle\"></i>;\n  }\n}\n\nexport default { search, removeItem, getIcon };","import React from 'react';\nimport { getIcon } from './actions';\nclass Result extends React.Component {\n\n  state = {}\n\n  mouseOverHandler = (item) => {\n    if (item.searchType === 'SKILL') {\n      this.props.toggleDialogue(false);\n    } else if (item.searchType === 'PROJECT') {\n      const logo = this.props.getProjectLogo(item.id);\n      this.props.toggleDialogue();\n      this.props.showObjectInformation({ ...item, clientName: item.name, logo: logo }, 'PROJECT');\n    } else {\n      this.props.toggleDialogue();\n      this.props.showObjectInformation(item, item.searchType);\n    }\n  }\n\n  removeObject = () => {\n    this.props.removeSelectedObject(this.props.item);\n  }\n\n  clickHandler = (item) => {\n    this.props.clickHandler(this.props.item);\n    this.props.clearSearch();\n  }\n\n\n\n  render() {\n\n    const icon = getIcon(this.props.item);\n    return (\n      <li\n        className='result'\n        key={this.props.item.name + '_' + this.props.item.id}\n        onMouseOver={() => this.mouseOverHandler(this.props.item)}\n        onMouseOut={() => this.props.toggleDialogue(false)}\n        onMouseDown={() => this.clickHandler(this.props.item)}\n      >\n        <i>{icon}</i>\n        {this.props.item.name}\n\n      </li>\n    );\n  }\n}\n\nexport default Result;","import React from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport { search, removeItem } from './actions';\nimport Result from 'components/main/search/Result';\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      searchWord: '',\n      focus: false\n    };\n  }\n\n  handleChange = (e) => {\n    console.log(this.props)\n    const results = search(e.target.value, this.props);\n    this.setState({\n      list: results,\n      searchWord: e.target.value\n    });\n  }\n\n  clearSearch = () => {\n    this.setState({\n      searchWord: '',\n      list: []\n    });\n    this.setState({ focus: false });\n    this.props.toggleDialogue(false);\n  }\n\n  removeFromResults = (item) => {\n    const results = removeItem(item, this.state.list);\n    this.setState({ list: results });\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick, false);\n  }\n\n  handleClick = (e) => {\n    if (!this.node.contains(e.target)) {\n      this.handleClickOutside();\n    }\n  }\n\n  handleClickOutside = () => {\n    this.clearSearch();\n    document.removeEventListener('mousedown', this.handleClick, false);\n    document.removeEventListener('keydown', this.handleEsc, false);\n\n\n  }\n\n  handleEsc = (e) => {\n    if (e.key === 'Escape') {\n      this.clearSearch();\n      document.removeEventListener('keydown', this.handleEsc, false);\n      this.node.blur();\n    }\n  }\n\n  focusElement = (e) => {\n    document.addEventListener('mousedown', this.handleClick, false);\n    document.addEventListener('keydown', this.handleEsc, false);\n    this.setState({ focus: true });\n  }\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"search-input\">\n          <FormControl\n            ref={node => this.node = node}\n            value={this.state.searchWord}\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"search-bar\"\n            onChange={this.handleChange}\n            onMouseDown={this.focusElement}\n          />\n          {this.state.focus &&\n            <i className=\"fas fa-times-circle\" onMouseDown={() => this.clearSearch()}></i>\n          }\n        </div>\n        <div className=\"results\">\n          <ul>\n            {this.state.list.map((item, index) =>\n              <Result\n                key={index}\n                item={item}\n                showObjectInformation={this.props.showObjectInformation}\n                toggleDialogue={this.props.toggleDialogue}\n                clickHandler={this.props.addSelectedObject}\n                removeSelectedObject={this.props.removeSelectedObject}\n                clearSearch={this.clearSearch}\n                getProjectLogo={this.props.getProjectLogo}\n              />)}\n          </ul>\n        </div>\n      </React.Fragment >\n    );\n  }\n}\n\nexport default Search;","import React from 'react';\n\nclass Breadcrumb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      crumbs: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ crumbs: [this.props.clickedClient] });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.clickedClient.length === 0) return;\n    if (!this.isEqual(prevProps.clickedClient, this.props.clickedClient)) {\n      const crumbs = [...prevState.crumbs, this.props.clickedClient];\n      this.setState({ crumbs });\n    }\n  }\n\n  handleClick(index) {\n    if (index + 1 === this.state.crumbs.length) return;\n    const client = this.state.crumbs[index];\n    this.props.breadcrumbClick(client, true);\n    const crumbs = this.state.crumbs.slice(0, index + 1);\n    this.setState({ crumbs });\n  }\n\n  isEqual(a, b) {\n    if (b.id === '' && b.name === '' && b.type === '') return true;\n    if (a.id === b.id && a.type === b.type && a.name === b.name) {\n      if (a.type === 'category' || a.type === 'more') {\n        if (a.list.length !== b.list.length) return false;\n        for (let index in a.list) \n          if (!this.isEqual(a.list[index], b.list[index])) return false;\n      } \n      return true;\n    } \n    return false;\n  }\n\n  render() {\n    const crumbs = this.state.crumbs.map((_, i) => (\n      <span className='crumb' onClick={this.handleClick.bind(this, i)} key={i} />\n    ));\n    return (\n      <div className='breadcrumbs'>\n        {crumbs}\n      </div>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\n\nclass Tag extends Component {\n  state = {\n  }\n\n  removeObject = () => {\n    this.props.removeSelectedObject(this.props.object);\n  }\n\n  render() {\n    return (\n      <li className=\"tag\">\n        <span>{this.props.name}</span>\n        <i className=\"fas fa-times-circle\" onMouseDown={() => this.removeObject()}></i>\n      </li>\n    );\n  }\n}\n\nexport default Tag;","import React, { Component } from 'react';\nimport Tag from './tag';\n\nclass tagList extends Component {\n  state = {}\n  render() {\n    const tagList = this.props.selectedObjects.map((o, i) => {\n      return <Tag\n        key={i}\n        name={o.name}\n        removeSelectedObject={this.props.removeSelectedObject}\n        object={o}\n      />;\n    });\n\n    return (\n      <ul className='tag-list'>\n        {tagList}\n      </ul>\n    );\n  }\n}\n\nexport default tagList;","import React, { Component } from 'react';\nimport { Navbar, Form, Button } from 'react-bootstrap';\nimport Search from 'components/main/search/Search';\nimport Breadcrumb from 'components/main/breadcrumb/Breadcrumb';\nimport TagList from 'components/main/tagList/tagList';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Navbar className='header' variant='header' expand='lg'>\n        <div className='h-row'>\n          <div>\n            <img src='img/logos/FindOut.png' alt='FindOut' className='brandLogo'/>\n            \n            <Form inline className='searchForm' onSubmit={e => e.preventDefault()}>\n              <Search\n                clients={this.props.clients}\n                projects={this.props.projects}\n                employees={this.props.employees}\n                skills={this.props.skills}\n                showObjectInformation={this.props.showObjectInformation}\n                toggleDialogue={this.props.toggleDialogue}\n                addSelectedObject={this.props.addSelectedObject}\n                removeSelectedObject={this.props.removeSelectedObject}\n                selectedObjects={this.props.selectedObjects}\n                getProjectLogo={this.props.getProjectLogo}\n              />\n            </Form>\n\n            <TagList\n              selectedObjects={this.props.selectedObjects}\n              removeSelectedObject={this.props.removeSelectedObject}\n            />\n          </div>\n          <div className='right'>\n            <Button className='ml-auto p-2' variant='light'>\n              <i className='far fa-question-circle'></i>\n            </Button>\n          </div>\n        </div>\n        <div className='h-row'>\n          <Breadcrumb\n            clickedClient={this.props.clickedClient}\n            breadcrumbClick={this.props.breadcrumbClick}\n          />\n        </div>\n\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\n\nclass Loader extends React.Component {\n  render() {\n    return ( \n      <div className='loader'>\n        <p className='spinner'></p>\n      </div>\n    );\n  }\n}\n\nexport default Loader;","import React from 'react';\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className={`title ${this.props.isHighlighted ? 'hide' : ''}`}>\n        {this.props.title}\n      </div>);\n  }\n}\n\nexport default Title;","import axios from 'axios';\n\nconst apiRoute = '';\nexport async function fetchEmployee() {\n\n  const requestURL = `${apiRoute}employee/all/zero`;\n  const options = {\n    url: requestURL,\n    responseType: \"json\",\n    method: 'GET',\n  };\n\n  let response;\n  try {\n    response = await axios(options);\n  } catch (error) {\n    return {};\n  }\n\n  if (response.status === 200) {\n    const employees = response.data;\n    return { employees };\n  }\n}\nexport async function fetchCustomer() {\n\n  const requestURL =`${apiRoute}customer/all/zero`;\n  const options = {\n    url: requestURL,\n    responseType: \"json\",\n    method: 'GET',\n  };\n\n  let response;\n  try {\n    response = await axios(options);\n\n  } catch (error) {\n    return {};\n  }\n\n  if (response.status === 200) {\n    const clients = response.data;\n    return { clients};\n  }\n}\n\nexport async function fetchProject() {\n\n  const requestURL =`${apiRoute}project/all/zero`;\n  const options = {\n    url: requestURL,\n    responseType: \"json\",\n    method: 'GET',\n  };\n\n  let response;\n  try {\n    response = await axios(options);\n  } catch (error) {\n    return {};\n  }\n\n  if (response.status === 200) {\n    const projects = response.data;\n    return { projects};\n  }\n}\n\nexport async function fetchProjectCount() {\n\n  const requestURL =`${apiRoute}project/total`;\n  const options = {\n    url: requestURL,\n    responseType: \"json\",\n    method: 'GET',\n  };\n\n  let response;\n  try {\n    response = await axios(options);\n  } catch (error) {\n    return {};\n  }\n\n  if (response.status === 200) {\n    const projectsCount = response.data;\n    return { projectsCount};\n  }\n}\n","import ColorThief from 'color-thief';\nimport { union } from 'components/main/general';\n\n\n/* Get colors */\nvar colorThief = new ColorThief();\n\nexport function getColor(src) {\n  return new Promise((resolve, reject) => {\n    let img = new Image();\n    img.onload = () => {\n      let dominantColor = colorThief.getColor(img);\n      dominantColor = dominantColor.map(x => {\n        x = parseInt(x).toString(16);\n        return (x.length === 1) ? '0' + x : x;\n      });\n      resolve(`#${dominantColor.join('')}`);\n    };\n    img.onerror = () => reject('');\n    img.src = `${process.env.PUBLIC_URL}${src}`;\n  });\n}\n\n/* Check if imgage exists */\nexport function imageExists(src) {\n    return new Promise((resolve, reject) => {\n      let img = new Image();\n      img.onload = () => resolve();\n      img.onerror = () => reject();\n      img.src = `${process.env.PUBLIC_URL}${src}`;\n    });\n  }\n\n/* Get group categories */\nlet maxAnnularSectors; \nexport async function groupCategories(clients) {\n    const grouped = {};\n    for (let client of clients) {\n      if (!(client.category in grouped)) grouped[client.category] = [client];\n      else grouped[client.category].push(client);\n    }\n    console.log(grouped)\n  \n    const sorted = [];\n    let counter = clients.length;\n    for (let category in grouped) {\n      let imageSrc = `/img/categories/${category.trim().replace(/\\s/g, '_')}.png`;\n      try {\n        var color = await getColor(imageSrc);\n      } catch (error) {\n        color = '';\n        imageSrc = '/img/logos/company_placeholder.png';\n      }\n  \n      let employees = [];\n      let projects = [];\n      let skills = [];\n      let clients = [];\n      for (let client of grouped[category]) {\n        union(employees, client.employees);\n        union(projects, client.projects);\n        union(skills, client.skills);\n        clients.push(client.id);\n      }\n  \n      sorted.push({\n        id: counter++,\n        name: category,\n        category: 'Categories',\n        type: 'category',\n        list: grouped[category],\n        hours: grouped[category].length,\n        selected: false,\n        color,\n        highlight: true,\n        textHighlight: false,\n        logo: imageSrc,\n        projects,\n        employees,\n        skills,\n        clients\n      });\n    }\n  \n    sorted.sort((a, b) => b.list.length - a.list.length);\n    console.log(sorted)\n    const categories = getLargestClients(sorted);\n    maxAnnularSectors = sorted.length;\n    console.log(categories)\n    console.log(categories[maxAnnularSectors].list)\n    categories[maxAnnularSectors].hours = categories[maxAnnularSectors].list.length;\n    categories[maxAnnularSectors].list.sort((a, b) => b.hours - a.hours);\n  \n    return {\n      id: counter++,\n      name: 'Categories',\n      category: 'Categories',\n      type: 'root',\n      list: categories,\n      hours: 0,\n      color: '#000',\n      selected: false,\n      highlight: true,\n      textHighlight: false,\n      projects: [],\n      employees: [],\n      clients: [],\n      skills: [],\n      logo: ''\n    };\n  }\n\n  export function getLargestClients(clients) {\n    let imageSrc = '/img/categories/more.png';\n    if (!clients) return clients;\n    const clientList = clients.slice(0, maxAnnularSectors);\n    const other = {\n      id: -1,\n      name: 'More',\n      category: clients[0].category,\n      type: 'more',\n      highlight: true,\n      color: '#2D2A32',\n      hours: 0,\n      selected: false,\n      list: [],\n      projects: [],\n      employees: [],\n      clients: [],\n      skills: [],\n      logo: imageSrc\n    };\n  \n    for (let i = maxAnnularSectors; i < clients.length; i++) {\n      other.hours += clients[i].hours;\n      other.list.push(clients[i]);\n      union(other.employees, clients[i].employees);\n      other.projects.push(...clients[i].projects);\n      if (clients[i].type === 'category')\n        other.clients.push(...getClients(clients[i].list));\n      else\n        other.clients.push(clients[i].id);\n      union(other.skills, clients[i].skills);\n    }\n    clientList.push(other);\n  \n    return clientList;\n  }\n  \n  function getClients(clients) {\n    const list = [];\n    for (let client of clients) {\n      if (client.type === 'category') list.push(...getClients(clients));\n      else list.push(client.id);\n    }\n    return list;\n  }\n","import moment from 'moment';\nimport { union } from 'components/main/general';\nimport {\n   fetchEmployee,\n   fetchProject,\n   fetchCustomer,\n   fetchProjectCount\n  } from './api';\nimport {getColor, imageExists, groupCategories} from './utilities/index';\n\nconst dateFormat = 'YYYY-MM-DD';\n\nexport async function load() {\n  const { projectList, employeeList, technologyList, clientList, unsortedClients, projectsCount } = await getData();\n  const categories = await groupCategories(clientList);\n  categories.clients = clientList.map((_, i) => i);\n  categories.projects = projectList.map((_, i) => i);\n  categories.employees = employeeList.map((_, i) => i);\n  categories.skills = technologyList.map((_, i) => i);\n  return {\n    categories,\n    projectList,\n    employeeList,\n    technologyList,\n    clientList,\n    unsortedClients,\n    projectsCount\n  };\n}\n\nasync function getData() {\n   function getTechList(technologies, clientId, projectId, employeeId) {   \n    if (technologies.length === 0) return [];\n    return technologies.map(technology => {\n      let techObj = technologyList.find(t => t.name.toLowerCase() === technology.toLowerCase()); \n      if (techObj) {\n        if (clientId && !techObj.clients.includes(clientId))\n          techObj.clients.push(clientId);\n        if (projectId && !techObj.projects.includes(projectId))\n          techObj.projects.push(projectId);\n        if (employeeId && !techObj.employees.includes(employeeId))\n          techObj.employees.push(employeeId);\n      } else {\n        techObj = {\n          id: technologyIdCounter++,\n          name: technology,\n          highlight: false,\n          clients: clientId ? [clientId] : [],\n          projects: projectId ? [projectId] : [],\n          employees: employeeId ? [employeeId] : []\n        };\n        technologyList.push(techObj);\n      }\n      return techObj.id;\n    });\n  }\n\n  function getClientId(client) {\n    if (client.length === 0) return -1;\n    return client.map(client => {\n      let clientObj = clientList.find(t => t.name.toLowerCase() === client.toLowerCase());  \n      return clientObj.id;\n    })\n  }\n\n  function getClientColor(client) {\n    if (client.length === 0) return -1;\n    return client.map(client => {\n      let clientObj = clientList.find(t => t.name.toLowerCase() === client.toLowerCase());  \n    return clientObj.color;\n    });\n  }\n\n  function updateClient(clientId, projectId, duration, employees, skills) {\n   if(!clientList[clientId].projects.includes(projectId)) clientList[clientId].projects.push(projectId);\n    clientList[clientId].hours += duration;\n    union(clientList[clientId].employees, employees);\n    union(clientList[clientId].skills, skills);\n  }\n\n  function updateEmployee(clientId, projectId, employees) {\n  \n    Object.keys(employees).forEach(function(key){\n\n       let employeeId = employees[key];\n       if(employeeList[employeeId] !== undefined){\n        employeeList[employeeId].projects.push(projectId);\n        if (!employeeList[employeeId].clients.includes(clientId))\n          employeeList[employeeId].clients.push(clientId);\n       }\n    })\n    }\n\n  function getEmployeeList(employees) {\n    return employees.map(employee => employeeList.find(e => e.name.toLowerCase() === employee.toLowerCase()).id);\n  }\n\n  function getDates(startDates, endDates) {\n    const startDateList = startDates.split(',').map(date => date.trim());\n    const endDateList = endDates ? endDates.split(',').map(date => date.trim()) : [];\n    const startDate = startDateList[0];\n    let endDate;\n    if (startDateList.length === endDateList.length) {\n      // Number of days doesn't always correspond to the month\n      const endDateSplitted = endDateList[endDateList.length - 1].split('-');\n      const year = endDateSplitted[0];\n      const month = endDateSplitted[1];\n      endDate = moment(`${year}-${month}`).endOf('month').format(dateFormat);\n    } else  // Ongoing project\n      endDate = moment().format(dateFormat);\n    return { startDate, endDate };\n  }\n\n\n  const {employees } = await fetchEmployee();\n  if (!employees) return Error;\n\n  const {clients} = await fetchCustomer();\n  if (!clients) return Error;\n  \n  const {projects} = await fetchProject();\n  if (!projects) return Error;\n  \n  const {projectsCount} = await fetchProjectCount();\n  if (!projectsCount) return Error;\n\n\n  let clientList = [];\n  let technologyList = [];\n  let projectList = [];\n  let employeeList = [];\n  let technologyIdCounter = 0;\n  for (let employee of employees) {\n    let img;\n    try {\n      img = `img/employees/${[employee.firstName, employee.lastName].join('_').replace(/\\s/g, '_')}.jpg`;\n      await imageExists(img);\n    } catch {\n      img = null;\n    }\n    \n    employeeList.push({\n      id: employee.id,\n      name: `${employee.firstName} ${employee.lastName}`,\n      highlight: true,\n      brushedDisplay: true,\n      roll: `${employee.role ? employee.role : ''}`,\n      img,\n      dateInit: moment(`${employee.startYear}-01-01`).format(dateFormat),\n      dateEnd: `${employee.endYear ? moment(employee.endYear + '-01-01').format(dateFormat) : moment().format(dateFormat)}`,\n      location:employee.location,\n      birthYear: employee.birthYear,\n      skills: getTechList(employee.technologies, undefined, undefined, employee.id),\n      projects: [],\n      clients: []\n    });\n  }\n\n  for (const client of clients) {\n    let imageSrc = `/img/logos/${client.name.trim().replace(/\\s/g, '_')}.png`;\n    try {\n      var color = await getColor(imageSrc);\n    } catch (error) {\n      color = '';\n      imageSrc = '/img/logos/company_placeholder.png';\n    }\n    clientList.push({\n      id: client.id,\n      name: client.name,\n      hours: 0,\n      color: color,\n      logo: imageSrc,\n      highlight: true,\n      projects: [],\n      category: client.category,\n      description: client.description ? client.description : '',\n      location: client.location,\n      type: 'client',\n      employees: [],\n      skills: [],\n      list: []\n    });\n    \n  }\n\n  clientList.push({\n    id: clientList.length ,\n    name: 'Other',\n    hours: 0,\n    color: '#3E5641',\n    logo: '/img/logos/company_placeholder.png',\n    highlight: true,\n    projects: [],\n    category: 'Other',\n    description: 'Projects without client.',\n    location: '',\n    type: 'client',\n    employees: [],\n    skills: [],\n    list: []\n  });\n\n Object.keys(projects).forEach(function(key) {\n  let project = projects[key];\n     const { startDate, endDate } = getDates(project.startDates, project.endDates);\n     const duration = Math.floor(moment.duration(moment(endDate).diff(moment(startDate))).asHours());\n     let clientId = getClientId(project.client);\n     const color = getClientColor(project.client);\n     clientId = clientId === -1 ? clients.length : clientId[0];\n     const employees = getEmployeeList(project.employees);\n    const skills = getTechList(project.technologies, clientId, project.id);\n    updateClient(clientId, project.id, duration, employees, skills);\n    updateEmployee(clientId, project.id, employees);\n    projectList.push({\n      id: project.id,\n      name: project.name,\n      highlight: true,\n      brushedDisplay: true,\n      type: project.type ? project.type : 'Normal',\n      description: project.description,\n      clientId,\n      employees,\n      dateInit: new Date(startDate),\n      dateEnd: new Date(endDate),\n      skills,\n      color,\n      hours: duration\n    });\n\n});\n  \n  \n\n  const unsortedClients = [...clientList];\n  clientList.sort((a, b) => b.hours - a.hours);\n  return { projectList, employeeList, technologyList, clientList, unsortedClients, projectsCount };\n}\n\n\nexport default {\n  load\n};\n","import moment from 'moment';\nimport * as d3 from 'd3';\n\n/**\n   * Set the Highlight state either to true or false\n   * returns an array with the modified items\n   *\n   * @param highlight Boolean to set the state\n   * @param modArray Array to modify\n   */\nexport function setHighlight(highlight, modArray) {\n  return modArray.map(d => {\n    d.highlight = highlight;\n    return d;\n  });\n}\n\n/**\n   * Modify the hightlight atribute of an object if it\n   * matches the id\n   *\n   * @param highLight Boolean to set the state\n   * @param modArray Array to modify\n   * @param idArray array with number IDs to modify\n   * @pram ifIncludes Boolean check if it includes or it does not\n   */\nexport function setHighlightElement(highlight, idArray, modArray, ifIncludes) {\n  return modArray.map(d => {\n    if (idArray.includes(d.id) === ifIncludes) {\n      d.highlight = highlight;\n    }\n    return d;\n  });\n}\n\n/**\n   * Modify the hightlight atribute of an object if it\n   * matches the id\n   *\n   * @param highhighlightElementLight Boolean to set the state\n   * @param highlightText boolean for the text\n   * @param modArray Array to modify\n   * @param idArray array with number IDs to modify\n   * @pram ifIncludes Boolean check if it includes or it does not\n   */\nexport function setHighlightText(highlightText, idArray, modArray, ifIncludes) {\n  return modArray.map(d => {\n    if (idArray.includes(d.id) === ifIncludes) {\n      d.textHighlight = highlightText;\n    }\n    return d;\n  });\n}\n\nexport function unHighlightText(modArray) {\n  return modArray.map(d => {\n    d.textHighlight = false;\n    return d;\n  });\n}\n/**\n * Checks if the element skills match the id and modifies the highlight state to true\n * checks if clients from the element do not match \n * \n * @param id Number of skill \n * @param modArray array to modify\n */\nexport function highlightElementWithSkill(id, modArray) {\n  let clients = [];\n  const projectsHighLight = modArray.map(d => {\n    if (d.skills.includes(id)) {\n      d.highlight = true;\n      if (!clients.includes(d.clientId)) clients.push(d.clientId);\n    } else {\n      d.highlight = false;\n    }\n    return d;\n  });\n  return [clients, projectsHighLight];\n}\n\n/**\n * searches for skills in element, if it has it turns it's highlight state to true\n * @param {number} id of skill to search in element\n * @param {array} mdArray array to modify\n */\nexport function elementWithSkill(id, mdArray) {\n  return mdArray.map(d => {\n    d.highLight = d.skills.includes(id);\n    return d;\n  });\n}\n\n/**\n * search for an element with the id and return it\n * @param {number} id of the element to find\n * @param {array} array array to search\n */\nexport function getElementById(id, array) {\n  return array.find(d => d.id === id);\n}\n\n/**\n * \n * @param {*} objArr \n * @param {*} initDate \n * @param {*} InBruMonth \n * @param {*} OutBruMonth \n */\nexport function brushObjectByDate(objArr, initDate, InBruMonth, OutBruMonth) {\n  return objArr.map(o => {\n    const pInit = getMonthsDifference(initDate, o.dateInit);\n    const pEnd = getMonthsDifference(initDate, o.dateEnd);\n    o.brushedDisplay = OutBruMonth - pInit >= 0 && pEnd - InBruMonth >= 0 ? true : false;\n    return o;\n  });\n}\n\nexport function reCalculateClientHours(clients, projects) {\n  return clients.map(c => {\n    let hours = 0;\n    const projectsFiltered = projects.filter(p => p.clientId === c.id);\n    projectsFiltered.forEach(p => {\n      hours += p.brushedDisplay ? p.hours : 0;\n    });\n    c.hours = hours;\n    return c;\n  });\n}\n\n\n/**\n * returns the differente between two dates in months\n * @param {date} IDate initial date \n * @param {date} ODate ending date\n */\nexport function getMonthsDifference(IDate, ODate) {\n  return d3.timeMonth.count(IDate, ODate);\n}\n\n/**\n * returns adds the number of months to inital date and returns the date \n * @param {*} month \n * @param {*} initDate \n */\nexport function getDateFromStep(month, initDate) {\n  return moment(initDate).add(month, 'M').format('MMM YYYY');\n}\n\nexport function resetBrushedDisplay(ModArray) {\n  return ModArray.map(p => p.brushedDisplay = true);\n}\n\nexport function setSelectedState(refArray, modArray) {\n  const clients = modArray.clients.map(c => {\n    c.selected = refArray.clients.includes(c.id);\n    return c;\n  });\n\n  const employees = modArray.employees.map(e => {\n    e.selected = refArray.employees.includes(e.id);\n    return e;\n  });\n  const skills = modArray.skills.map(s => {\n    s.selected = refArray.skills.includes(s.id);\n    return s;\n  });\n  const projects = modArray.projects.map(p => {\n    p.selected = refArray.projects.includes(p.id);\n    return p;\n  });\n\n  return {\n    employees: employees,\n    clients: clients,\n    projects: projects,\n    skills: skills\n  };\n}\n\n\nfunction removeNonRepeatedObj(outArray, objects, inArray) {\n  return inArray.filter(id => {\n    return outArray.includes(id) && !objects.includes(id) ? false : true;\n  });\n}\n\nfunction mergeRepeated(inArr) {\n  return Array.from(new Set(inArr));\n}\n\n\n/**\n * \n * @param {dic} selectedData the current selected objects \n * @param {ob} object the object you want to add\n * @param {dic} objectsDic array containing the current clients, employees, skills, and projects \n */\nexport function addSelected(selectedData, object) {\n  let clients = [...selectedData.clients],\n    employees = [...selectedData.employees],\n    skills = [...selectedData.skills],\n    projects = [...selectedData.projects];\n  switch (object.searchType) {\n    case 'EMPLOYEE':\n      employees = mergeRepeated([...employees, object.id]);\n      skills = mergeRepeated([...skills, ...object.skills]);\n      projects = mergeRepeated([...projects, ...object.projects]);\n      clients = mergeRepeated([...clients, ...object.clients]);\n      break;\n    case 'CLIENT':\n      clients = mergeRepeated([...clients, object.id]);\n      projects = mergeRepeated([...projects, ...object.projects]);\n      employees = mergeRepeated([...employees, ...object.employees]);\n      skills = mergeRepeated([...skills, ...object.skills]);\n      break;\n    case 'PROJECT':\n      projects = mergeRepeated([...projects, object.id]);\n      employees = mergeRepeated([...employees, ...object.employees]);\n      skills = mergeRepeated([...skills, ...object.skills]);\n      clients = mergeRepeated([...clients, object.clientId]);\n      break;\n    case 'SKILL':\n      skills = mergeRepeated([...skills, object.id]);\n      projects = mergeRepeated([...projects, ...object.projects]);\n      employees = mergeRepeated([...employees, ...object.employees]);\n      clients = mergeRepeated([...clients, ...object.clients]);\n\n      break;\n    default:\n      return selectedData;\n  }\n  return {\n    employees: Array.from(new Set(employees)),\n    clients: Array.from(new Set(clients)),\n    projects: Array.from(new Set(projects)),\n    skills: Array.from(new Set(skills))\n  };\n\n}\n\n\nfunction getDataFromSelectedObjects(objs, stateData) {\n  let clients = [];\n  let employees = [];\n  let skills = [];\n  let projects = [];\n  let locations = [];\n  objs.forEach(o => {\n    switch (o.searchType) {\n      case 'EMPLOYEE':\n        employees = [...employees, o.id];\n        skills = [...skills, ...o.skills];\n        projects = [...projects, ...o.projects];\n        clients = [...clients, ...o.clients];\n        locations = [...locations, ...o.locations];\n        break;\n      case 'CLIENT':\n        clients = [...clients, o.id];\n        projects = [...projects, ...o.projects];\n        employees = [...employees, ...o.employees];\n        skills = [...skills, ...o.skills];\n        break;\n      case 'PROJECT':\n        projects = [...projects, o.id];\n        employees = [...employees, ...o.employees];\n        skills = [...skills, ...o.skills];\n        clients = [...clients, o.clientId];\n        break;\n      case 'SKILL':\n        skills = [...skills, o.id];\n        projects = [...projects, ...o.projects];\n        employees = [...employees, ...o.employees];\n        clients = [...clients, ...o.clients];\n\n        break;\n      default:\n        break;\n    }\n  });\n  return {\n    clients: mergeRepeated(clients),\n    employees: mergeRepeated(employees),\n    skills: mergeRepeated(skills),\n    projects: mergeRepeated(projects)\n  };\n}\n\nfunction getObjectsFromState(objs, stateData) {\n  return objs.map(object => {\n    switch (object.searchType) {\n      case 'EMPLOYEE':\n        return object = stateData.employees.find(o => o.id === object.id);\n      case 'CLIENT':\n        return object = stateData.clients.find(o => o.id === object.id);\n      case 'PROJECT':\n        return object = stateData.projects.find(p => p.id === object.id);\n      case 'SKILL':\n        return object = stateData.skills.find(s => s.id === object.id);\n      default:\n        return object;\n    }\n  });\n}\n\nexport function removeSelected(selectedData, object, stateData, selectedTagList) {\n  let selectedClients = selectedData.clients,\n    selectedEmployees = selectedData.employees,\n    selectedSkills = selectedData.skills,\n    selectedProjects = selectedData.projects;\n  let delObj = null;\n  const tagListObjects = getObjectsFromState(selectedTagList, stateData);\n  const dataFromSelectedObjects = getDataFromSelectedObjects(tagListObjects, stateData);\n\n  switch (object.searchType) {\n    case 'EMPLOYEE':\n      delObj = stateData.employees.find(o => object.id === o.id);\n      selectedEmployees = removeNonRepeatedObj([delObj.id], dataFromSelectedObjects.employees, selectedEmployees);\n      selectedSkills = removeNonRepeatedObj(delObj.skills, dataFromSelectedObjects.skills, selectedSkills);\n      selectedProjects = removeNonRepeatedObj(delObj.projects, dataFromSelectedObjects.projects, selectedProjects);\n      selectedClients = removeNonRepeatedObj(delObj.clients, dataFromSelectedObjects.clients, selectedClients);\n      break;\n    case 'CLIENT':\n      delObj = stateData.clients.find(o => o.id === object.id);\n      selectedClients = removeNonRepeatedObj([delObj.id], dataFromSelectedObjects.clients, selectedClients);\n      selectedEmployees = removeNonRepeatedObj(delObj.employees, dataFromSelectedObjects.employees, selectedEmployees);\n      selectedSkills = removeNonRepeatedObj(delObj.skills, dataFromSelectedObjects.skills, selectedSkills);\n      selectedProjects = removeNonRepeatedObj(delObj.projects, dataFromSelectedObjects.projects, selectedProjects);\n      break;\n    case 'PROJECT':\n      delObj = stateData.projects.find(p => p.id === object.id);\n      selectedProjects = removeNonRepeatedObj([delObj.id], dataFromSelectedObjects.projects, selectedProjects);\n      selectedEmployees = removeNonRepeatedObj(delObj.employees, dataFromSelectedObjects.employees, selectedEmployees);\n      selectedSkills = removeNonRepeatedObj(delObj.skills, dataFromSelectedObjects.skills, selectedSkills);\n      selectedClients = removeNonRepeatedObj([delObj.clientId], dataFromSelectedObjects.clients, selectedClients);\n      break;\n    case 'SKILL':\n      delObj = stateData.skills.find(s => s.id === object.id);\n      selectedSkills = removeNonRepeatedObj([delObj.id], dataFromSelectedObjects.skills, selectedSkills);\n      selectedEmployees = removeNonRepeatedObj(delObj.employees, dataFromSelectedObjects.employees, selectedEmployees);\n      selectedProjects = removeNonRepeatedObj(delObj.projects, dataFromSelectedObjects.projects, selectedProjects);\n      selectedClients = removeNonRepeatedObj(delObj.clients, dataFromSelectedObjects.clients, selectedClients);\n      break;\n    default:\n      return selectedData;\n  }\n\n  return {\n    employees: selectedEmployees,\n    clients: selectedClients,\n    projects: selectedProjects,\n    skills: selectedSkills\n  };\n}\n\n/**\n * checks all the projects and sets the inital and ending date\n * @param {array} projects array with all the projects\n */\nexport function getDateRange(projects) {\n  const initDates = projects.map(p => moment(p.dateInit));\n  const endDates = projects.map(p => moment(p.dateEnd));\n  const min = moment.min(initDates).toDate();\n  const max = moment.max(endDates).toDate();\n  return [min, max];\n}\n\nexport function getBrushedProjectsEmployees(projects, employees) {\n  let employeesId = [];\n  projects.forEach(p => {\n    employeesId = p.brushedDisplay ? [...employeesId, ...p.employees] : employeesId;\n  });\n  return employees.map(e => {\n    e.brushedDisplay = employeesId.includes(e.id) ? true : false;\n    return e;\n  });\n}\n\nexport default {\n  setHighlight,\n  setHighlightElement,\n  highlightElementWithSkill,\n  getElementById,\n  elementWithSkill,\n  getDateRange,\n  setHighlightText,\n  unHighlightText,\n  getDateFromStep,\n  getMonthsDifference,\n  resetBrushedDisplay,\n  addSelected,\n  setSelectedState,\n  removeSelected,\n  brushObjectByDate,\n  reCalculateClientHours,\n  getBrushedProjectsEmployees\n};\n\n","import React from 'react';\nimport \"../styles/main.scss\"\nimport VizCircle from '../components/main/vizCircle/VizCircle';\nimport Legend from '../components/main/legend/Legend';\nimport Dialogue from '../components/main/dialogue/Dialogue';\nimport VizTimeline from '../components/main/vizTimeline/VizTimeline';\nimport Header from '../components/main/header/Header';\nimport Loader from '../components/main/loader/Loader';\nimport Title from '../components/main/title/Title';\nimport { load } from '../server/main/index';\nimport { getLargestClients } from '../server/main/utilities/index';\nimport { getObjects, union } from '../components/main/general';\nimport {\n  setHighlight,\n  setHighlightElement,\n  highlightElementWithSkill,\n  getElementById,\n  getDateRange,\n  setHighlightText,\n  unHighlightText,\n  getDateFromStep,\n  getMonthsDifference,\n  addSelected,\n  setSelectedState,\n  removeSelected,\n  brushObjectByDate,\n  reCalculateClientHours,\n  getBrushedProjectsEmployees,\n  resetBrushedDisplay\n} from '../components/main/interactions';\n//width and height of the SVG visualization\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clients: [],\n      unsortedClients: [],\n      clickedClient: [],\n      projects: [],\n      employees: [],\n      skills: [],\n      filteredClients: [],\n      filteredProjects: [],\n      filteredEmployees: [],\n      filteredSkills: [],\n      projectsCount: [],\n      size: [width, height],\n      isLoading: true,\n      isMobileView: false,\n      dialogueIsShown: false,\n      initialDates: [],\n      datesBrushed: [],\n      totalProjectsMonths: 0,\n      elementOver: {\n        type: 'none',\n        info: null\n      },\n      dialogueInfo: {},\n      displayTimeline: false,\n      filterPosition: [],\n      selectedObjects: [],\n      selected: {\n        employees: [],\n        clients:[],\n        category: [],\n        projects: [],\n        skills: [],\n        annularSector: []\n      },\n      highlightedClient: null,\n      highlightedProject: null,\n      highlightedEmployee: null,\n      refreshLegends: false,\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('resize', this.resize.bind(this));\n    this.resize();\n    this.setState({ isLoading: true });\n    const {\n      categories,\n      projectList,\n      employeeList,\n      technologyList,\n      clientList,\n      unsortedClients,\n      projectsCount\n    } = await load();\n    const selectedRange = getDateRange(projectList);\n    let totalMonths = getMonthsDifference(selectedRange[0], selectedRange[1]);\n    this.setState({\n      initialDates: selectedRange,\n      datesBrushed: selectedRange,\n      totalProjectsMonths: totalMonths,\n      isLoading: false,\n      clients: clientList,\n      unsortedClients,\n      projects: projectList,\n      projectsCount: projectsCount,\n      employees: employeeList,\n      skills: technologyList,\n      filteredClients: clientList,\n      filteredProjects: projectList,\n      filteredEmployees: employeeList,\n      filteredSkills: technologyList,\n      range: selectedRange,\n      clickedClient: categories,\n      filterPosition: [0, totalMonths],\n      annularSectors: categories.list,\n      currentView: categories.name\n    });\n  }\n\n\n  showSkill = id => {\n    const ans = highlightElementWithSkill(id, this.state.projects);\n    const highlightedSectors = setHighlightElement(false, ans[0], this.state.annularSectors, false);\n    const highlightedEmployees = highlightElementWithSkill(id, this.state.filteredEmployees);\n    const highlightedSkills = setHighlightElement(true, [id], this.state.skills, true);\n\n    this.setState({\n      skills: highlightedSkills,\n      projects: ans[1],\n      annularSectors: highlightedSectors,\n      filteredEmployees: highlightedEmployees\n    });\n  };\n\n  showProject = id => {\n    const project = getElementById(id, this.state.projects);\n    const highlightedEmployees = setHighlightElement(false, project.employees, this.state.filteredEmployees, false);\n    const highlightedProjects = setHighlightElement(false, [id], this.state.filteredProjects, false);\n    const highligtedSectors = setHighlightElement(false, [project.clientId], this.state.annularSectors, false);\n    const highlightedSkills = setHighlightElement(true, project.skills, this.state.filteredSkills, true);\n\n    this.setState({\n      annularSectors: highligtedSectors,\n      filteredSkills: highlightedSkills,\n      filteredProjects: highlightedProjects,\n      filteredEmployees: highlightedEmployees,\n      highlightedProject: project\n    });\n\n    const client = getElementById(project.clientId, this.state.annularSectors);\n    this.toggleDialogue();\n    this.modifyDialogueInfo({ ...project, clientName: client.name, logo: client.logo }, 'PROJECT');\n  };\n\n  showEmployee = id => {\n    const employee = getElementById(id, this.state.filteredEmployees);\n    const brushedProjectIds = this.state.filteredProjects\n    .filter(p => p.brushedDisplay && p.employees.includes(id))\n    .map(p => p.id);\n    const clientIds = this.state.annularSectors\n      .filter(s => s.projects.filter(p => brushedProjectIds.includes(p)).length !== 0)\n      .map(s => s.id);\n    const highlightedEmployees = setHighlightElement(false, [id], this.state.filteredEmployees, false);\n    const highlightedSectors = setHighlightElement(false, clientIds, this.state.annularSectors, false);\n    const highlightedProjects = setHighlightElement(false, brushedProjectIds, this.state.filteredProjects, false);\n    const highlightedSkills = setHighlightElement(true, employee.skills, this.state.filteredSkills, true);\n\n    this.setState({\n      annularSectors: highlightedSectors,\n      filteredProjects: highlightedProjects,\n      filteredEmployees: highlightedEmployees,\n      filteredSkills: highlightedSkills,\n      highlightedEmployee: employee\n    });\n    this.toggleDialogue();\n    this.modifyDialogueInfo(employee, 'EMPLOYEE');\n  };\n\n  showClient = (id) => {\n    const client = getElementById(id, this.state.annularSectors);\n    let highlightedSectors = setHighlightElement(false, [id], this.state.annularSectors, false);\n    highlightedSectors = client.type !== 'client' ?\n      setHighlightText(true, [id], highlightedSectors, true) : highlightedSectors;\n    let brushedProjects = [];\n    if (client.type === 'category') brushedProjects = getObjects(client.projects, this.state.projects);\n    else if (client.type === 'more') \n      brushedProjects = getObjects(client.projects, this.state.projects).filter(p => p.brushedDisplay);\n    else brushedProjects = this.state.filteredProjects.filter(p => p.brushedDisplay && p.clientId === id);\n    const employeeIds = client.employees.filter(eId => brushedProjects.filter(p => p.employees.includes(eId)).length !== 0); \n    const highlightedEmployees = setHighlightElement(false, employeeIds, this.state.filteredEmployees, false);\n    const highlightedProjects = setHighlightElement(false, client.projects, this.state.filteredProjects, false);\n    const skills = [];\n    brushedProjects.forEach(p => union(skills, p.skills));\n    let highlightedSkills = client.type === 'client' ?\n      setHighlightElement(true, skills, this.state.filteredSkills, true) :\n      this.state.filteredSkills;\n      // const selected = addSelected(this.state.selected, object, allObjects);\n    this.setState({\n      annularSectors: highlightedSectors,\n      filteredSkills: highlightedSkills,\n      filteredEmployees: highlightedEmployees,\n      filteredProjects: highlightedProjects,\n      highlightedClient: client\n    });\n\n    if (client.type === 'client') {\n      this.toggleDialogue();\n      this.modifyDialogueInfo(client, 'CLIENT');\n    }\n  };\n\n  unHighlightElements = (annularSectors, projects, employees, skills) => {\n    annularSectors = annularSectors || this.state.annularSectors;\n    projects = projects || this.state.filteredProjects;\n    employees = employees || this.state.filteredEmployees;\n    skills = skills || this.state.filteredSkills;\n    if (this.state.dialogueIsShown) this.toggleDialogue(false);\n    let unhighligtedSectors = setHighlight(true, annularSectors);\n    unhighligtedSectors = unHighlightText(unhighligtedSectors);\n    const unhighlightedProjects = setHighlight(true, projects);\n    const unhighlightedEmployees = setHighlight(true, employees);\n    const unhighlightedSkills = setHighlight(false, skills);\n\n    this.setState({\n      annularSectors: unhighligtedSectors,\n      filteredSkills: unhighlightedSkills,\n      filteredProjects: unhighlightedProjects,\n      filteredEmployees: unhighlightedEmployees,\n      highlightedClient: null,\n      highlightedProject: null,\n      highlightedEmployee: null\n    });\n  };\n\n  toggleDialogue = (toggle = true) => {\n    this.setState({ dialogueIsShown: toggle });\n  };\n\n  getProjectLogo = (id) => {\n    return this.state.clients.find(p => p.projects.includes(id)).logo;\n  }\n\n  addSelectedObject = (object) => {\n    const allObjects = {\n      clients: this.state.clients,\n      projects: this.state.projects,\n      employees: this.state.employees,\n      skills: this.state.skills,\n    };\n    const filteredObjects = {\n      clients: this.state.filteredClients,\n      projects: this.state.filteredProjects,\n      employees: this.state.filteredEmployees,\n      skills: this.state.filteredSkills,\n    };\n    const selected = addSelected(this.state.selected, object, allObjects);\n    const selectedState = setSelectedState(selected, allObjects);\n    const filteredSelectedObjects = setSelectedState(selected, filteredObjects);\n    const newSelectedObject = {\n      id: object.id,\n      name: object.name,\n      searchType: object.searchType\n    };\n    //add object to selectedList\n    this.setState({\n      selected: selected,\n      selectedObjects: [...this.state.selectedObjects, newSelectedObject],\n      clients: selectedState.clients,\n      employees: selectedState.employees,\n      projects: selectedState.projects,\n      skills: selectedState.skills,\n      filteredClients: filteredSelectedObjects.clients,\n      filteredEmployees: filteredSelectedObjects.employees,\n      filteredProjects: filteredSelectedObjects.projects,\n      filteredSkills: filteredSelectedObjects.skills,\n    });\n  }\n\n  removeSelectedObject = (object) => {\n    const allObjects = {\n      clients: this.state.clients,\n      projects: this.state.projects,\n      employees: this.state.employees,\n      skills: this.state.skills,\n    };\n    const selectedObjects = this.state.selectedObjects.filter(o => o.id === object.id && o.type === object.type ? false : true);\n    const selected = removeSelected(this.state.selected, object, allObjects, selectedObjects);\n    const selectedState = setSelectedState(selected, allObjects);\n\n    this.setState({\n      selectedObjects: selectedObjects,\n      selected: selected,\n      clients: selectedState.clients,\n      employees: selectedState.employees,\n      projects: selectedState.projects,\n      skills: selectedState.skills\n    });\n  }\n\n  /**\n  * Recieves an initial and ending date in number of months.  \n  * Returns the range in full date object\n  *\n  * @param initMonth the initial number of the month in the initial full date\n  * @param enMonth the ending number of the month in the end full date \n  */\n  brushDates = (initMonth, enMonth) => {\n    const filteredProjects = brushObjectByDate(this.state.filteredProjects, this.state.datesBrushed[0], initMonth, enMonth);\n    const filteredClients = this.state.filteredClients === null ? null : reCalculateClientHours(this.state.filteredClients, filteredProjects);\n    const filteredEmployees = getBrushedProjectsEmployees(filteredProjects, this.state.filteredEmployees);\n    this.setState({\n      refreshLegends: !this.state.refreshLegends,\n      filteredProjects,\n      filteredClients,\n      filteredEmployees,\n      filterPosition: [initMonth, enMonth]\n    });\n  };\n\n  getDateFormated = (month) => {\n    return getDateFromStep(month, this.state.datesBrushed[0]);\n  }\n\n  highlightElements = name => {\n    let clients = this.state.filteredClients;\n    let filteredEmployees = this.state.filteredEmployees;\n    let filteredProjects = this.state.filteredProjects;\n    let filteredSkills = this.state.filteredSkills;\n    switch (name) {\n      case 'EMPLOYEES':\n        clients = setHighlight(false, clients);\n        filteredProjects = setHighlight(false, filteredProjects);\n        break;\n      case 'CLIENTS':\n        filteredEmployees = setHighlight(false, filteredEmployees);\n        filteredProjects = setHighlight(false, filteredProjects);\n        break;\n      case 'PROJECTS':\n        clients = setHighlight(true, clients);\n        filteredEmployees = setHighlight(false, filteredEmployees);\n        filteredProjects = setHighlight(true, filteredProjects);\n        break;\n        case 'SKILLS':\n          clients = setHighlight(false, clients);\n          filteredProjects = setHighlight(false, filteredProjects);\n          filteredEmployees = setHighlight(false, filteredEmployees);\n          filteredSkills = setHighlight(true, filteredSkills);\n        break;\n      default:\n    }\n\n    this.setState({\n      clients,\n      filteredProjects,\n      filteredEmployees,\n      filteredSkills\n    });\n  };\n\n\n  modifyDialogueInfo = (data, type) => {\n    this.setState({ dialogueInfo: { data, type } });\n  }\n\n  resize() {\n    this.setState({ isMobileView: window.innerWidth <= 1180 });\n  }\n\n  setClickedClient(client, resetClickedClient) {\n    if (resetClickedClient) return { id: '', name: '', type: '', list: [] };\n    else if ((client.type === 'category' || client.type === 'more') && client.list.length === 1)\n      return client.list[0];\n    else return client;\n  }\n\n  containsCategory(client) {\n    if (client.type === 'client') return false;\n    if (client.type === 'root') return true;\n    if (client.list[0].type === 'category') return true;\n  }\n\n  handleClick = (client, resetClickedClient = false) => {\n    const employees = getObjects(client.employees, this.state.employees);\n    const annularSectors = client.list.length === 0 ? [client] : getLargestClients(client.list);\n    console.log(annularSectors)\n    const clients = client.list.length === 0 ? null :\n      getObjects(client.clients, this.state.unsortedClients);\n    const projects = getObjects(client.projects, this.state.projects).sort((a, b) => b.hours - a.hours);\n    const skillList = [];\n    employees.forEach(employee => union(skillList, employee.skills));\n    union(skillList, client.skills);\n    const skills = client.type === 'root' ? this.state.skills :\n      getObjects(skillList, this.state.skills);\n    const clickedClient = this.setClickedClient(client, resetClickedClient);\n    const currentView = client.type === 'more' ? client.category :\n      clickedClient.id === '' ? client.name : clickedClient.name;\n    const filteredProjects = brushObjectByDate(projects, this.state.datesBrushed[0], this.state.filterPosition[0], this.state.filterPosition[1]);\n    const filteredEmployees = client.type === 'root' ? \n      resetBrushedDisplay(this.state.employees) : \n      getBrushedProjectsEmployees(filteredProjects, this.state.employees);\n    const filteredClients = client.list.length === 0 || client.list === null ? [client] : reCalculateClientHours(clients, filteredProjects);\n    const displayTimeline = this.containsCategory(client) ? false : true;\n    this.setState({\n      currentView,\n      clickedClient,\n      filteredClients,\n      filteredProjects,\n      filteredEmployees,\n      displayTimeline,\n      refreshLegends: !this.state.refreshLegends\n    });\n    this.unHighlightElements(annularSectors, projects, employees, skills);\n  }\n\n  render() {\n    const mobileView = (\n      <div className='mobile-message'>\n        <div className='logo d-flex large'>\n          <div className='spacing-h small' />\n          <h1>FindOut Visualization</h1>\n        </div>\n        <div className='spacing' />\n        <p>\n          Please visit us from a desktop, this visualization is not\n          responsive....\n        </p>\n      </div >\n    );\n\n    const header = <Header\n      clients={this.state.clients}\n      projects={this.state.projects}\n      employees={this.state.employees}\n      skills={this.state.skills}\n      clickedClient={this.state.clickedClient}\n      breadcrumbClick={this.handleClick}\n      showObjectInformation={this.modifyDialogueInfo}\n      toggleDialogue={this.toggleDialogue}\n      addSelectedObject={this.addSelectedObject}\n      selectedObjects={this.state.selectedObjects}\n      removeSelectedObject={this.removeSelectedObject}\n      getProjectLogo={this.getProjectLogo}\n\n    />;\n    const title = <Title\n      title={this.state.currentView}\n      isHighlighted={\n        this.state.highlightedClient ||\n        this.state.highlightedProject ||\n        this.state.highlightedEmployee\n      }\n    />;\n    const legend = <Legend\n      projectsCount = {this.state.projectsCount}\n      clients={this.state.filteredClients}\n      projects={this.state.filteredProjects}\n      employees={this.state.filteredEmployees}\n      skills={this.state.filteredSkills}\n      client={this.state.highlightedClient}\n      project={this.state.highlightedProject}\n      employee={this.state.highlightedEmployee}\n      overEvent={this.highlightElements}\n      outEvent={this.unHighlightElements}\n      refreshLegends={this.state.refreshLegends}\n    />;\n    const dialogue = <Dialogue\n      dialogueIsShown={this.state.dialogueIsShown}\n      toggleDialogue={this.toggleDialogue}\n      dialogueInfo={this.state.dialogueInfo}\n    />;\n    const timeline = <VizTimeline\n      size={this.state.size}\n      displayTimeline={this.state.displayTimeline}\n      filterPosition={this.state.filterPosition}\n      totalProjectsMonths={this.state.totalProjectsMonths}\n      range={this.state.range}\n      annularSectors={this.state.annularSectors}\n      projects={this.state.filteredProjects}\n      employees={this.state.filteredEmployees}\n      selectProject={this.showProject}\n      mouseOutProject={this.unHighlightElements}\n      modifyRange={this.brushDates}\n      formatDate={this.getDateFormated}\n    />;\n    const vizCircle = <VizCircle\n      annularSectors={this.state.annularSectors}\n      clients={this.state.filteredClients}\n      employees={this.state.filteredEmployees}\n      projects={this.state.filteredProjects}\n      skills={this.state.filteredSkills}\n      size={this.state.size}\n      mouseOnClient={this.showClient}\n      mouseOnEmployee={this.showEmployee}\n      mouseOnProject={this.showProject}\n      unHighlightElements={this.unHighlightElements}\n      clientClick={this.handleClick}\n    />;\n    return (\n      <React.Fragment>\n        {this.state.isMobileView ? mobileView : this.state.isLoading ? <Loader /> :\n          <React.Fragment>\n            {header}\n            {title}\n            {legend}\n            {dialogue}\n            {vizCircle}\n            {timeline}\n          </React.Fragment>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Main;","import React, { Component } from \"react\";\nimport { Navbar, Button } from \"react-bootstrap\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  \n  render() {\n    const { history } = this.props;\n    return (\n      <div>\n        <Button className=\"backBtn\" onClick={()=> history.goBack()} >\n          <i className=\"fas fa-angle-double-left\"></i>Back\n        </Button>\n        <Navbar className=\"header\" variant=\"header\" expand=\"lg\">\n          <div className=\"h-row\">\n            <img\n              src=\"../img/logos/FindOut.png\"\n              alt=\"FindOut\"\n              className=\"brandLogo\"\n            />\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Loader extends React.Component {\n  render() {\n    return ( \n      <div className='loader'>\n        <p className='spinner'></p>\n      </div>\n    );\n  }\n}\n\nexport default Loader;","import ColorThief from \"color-thief\";\n\n/* To get employee igame*/\nconst profileImageGetter = ({ firstName, lastName }) => {\n  const imagePath = `img/employees/${[firstName, lastName]\n    .join(\"_\")\n    .replace(/\\s/g, \"_\")}.jpg`;\n  return `${process.env.PUBLIC_URL}/${imagePath}`;\n};\n\n/* To get logo image */\nconst logoImageGetter = ({ client }) => {\n  const imagePath = `img/logos/${client.trim().replace(/\\s/g, \"_\")}.png`;\n\n  return `${process.env.PUBLIC_URL}/${imagePath}`;\n};\n\n/* To get category image */\nconst categoryImageGetter = category => {\n  const imagePath = `img/categories/${category\n    .trim()\n    .replace(/\\s/g, \"_\")}.png`;\n\n  return `${process.env.PUBLIC_URL}/${imagePath}`;\n};\n\n/* To get skills logo image */\nconst skillsLogoGetter = (src) => {\n  return new Promise((resolve, reject) => {\n    let img = new Image();\n    img.onload = () => resolve();\n    img.onerror = () => reject();\n    img.src = `${process.env.PUBLIC_URL}${src}`;\n  });\n}\n\n/* To get color */\nconst colorGetter = ( logoUrl ) => {\n  return new Promise((resolve, reject) => {\n    let colorThief = new ColorThief();\n    let img = new Image();\n    img.src = logoUrl;\n    img.onload = () => {\n      let dominantColor = colorThief.getColor(img);\n      dominantColor = dominantColor.map(x => {\n        x = parseInt(x).toString(16);\n        return (x.length === 1) ? '0' + x : x;\n      });\n      resolve(`#${dominantColor.join('')}`);\n    };\n    img.onerror = () => reject('#3E5641');\n  });\n}\n\n\n\nexport {\n  profileImageGetter,\n  logoImageGetter,\n  categoryImageGetter,\n  skillsLogoGetter,\n  colorGetter\n};\n","import React, { Component } from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { profileImageGetter } from '../../../server/employee/utilities/index';\n\nexport default class Profile extends Component {\n  addDefaultSrc(ev){\n    ev.target.src = `${process.env.PUBLIC_URL}/img/employees/employee_placeholder.jpg`;\n  }\n\n  render() {\n    const {firstName, lastName, location, role, description } = this.props.profile;\n\n    const image = profileImageGetter({ firstName, lastName });\n\n    return (\n      <Container className=\"profile\">\n        <Row>\n          <Col>\n            <img src={image} onError={this.addDefaultSrc} alt={`${firstName} ${lastName}`} />\n          </Col>\n          <Col>\n            <Row>\n              <h1>{firstName} {lastName}</h1>\n            </Row>\n            <Row>\n              <h4>{role}</h4>\n            </Row>\n            <Row>\n              <h5>Location: {location}</h5>\n            </Row>\n          </Col>\n          \n        </Row>\n            <div className=\"description\">{description}</div>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\n\nclass Dialogue extends React.Component {\n  setText(data) {\n    return (\n      <div>\n        <p>\n          <span className=\"bold\">Client: </span>\n          <br></br>\n          {data.client}\n        </p>\n        <p>\n          <span className=\"bold\">Start date: </span>\n          <br></br>\n          {data.startDate}\n        </p>\n        <p>\n          <span className=\"bold\">End date: </span>\n          <br></br>\n          {data.endDate}\n        </p>\n        <p>{data.description}</p>\n      </div>\n    );\n  }\n\n  render() {\n    const { dialogueIsShown, dialogueInfo } = this.props;\n    const data = dialogueInfo;\n    const text = data ? this.setText(data) : <div />;\n\n    return (\n      <div>\n        <div className={dialogueIsShown ? \"dialogueBarchart\" : \"dialogue hidden\"}>\n          <div className=\"identification\">\n            {data ? (\n              <img src={data.img} alt={data.name} />\n            ) : (\n              <i className=\"fas fa-laptop-code\"></i>\n            )}\n            <div className=\"spacing x-small\"></div>\n            <h2>{data ? data.name : \"\"}</h2>\n          </div>\n          <div className=\"information\">{text}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dialogue;\n","import React, { Component } from \"react\";\nimport { groupedProjects } from \"./drawChart\";\nimport Dialogue from \"./Dialogue\";\nimport * as d3 from \"d3\";\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    const { data } = this.props;\n\n    const { grouped } = groupedProjects(data);\n    this.state = {\n      data: grouped,\n      width: 800,\n      height: 650,\n      recentData: [],\n      dialogueIsShown: false\n    };\n    this.showProject = this.showProject.bind(this);\n  }\n  componentDidMount() {\n    this.chart();\n  }\n\n\n  showProject = data => {\n    this.setState({ dialogueIsShown: !this.state.dialogueIsShown });\n    if (this.state.recentData !== data) {\n      this.setState({ dialogueIsShown: true });\n    }\n    this.setState({\n      recentData: data\n    });\n  };\n\n  chart = () => {\n    let barPadding = 10;\n    let rangeBands = [];\n    let cummulative = 0;\n\n    const data = Object.keys(this.state.data).map((companyName, i) => {\n      let returnValue = {\n        values: this.state.data[companyName],\n        companyName: companyName,\n        cummulative: cummulative,\n      };\n      cummulative += this.state.data[companyName].length;\n      \n      this.state.data[companyName].map(value => {\n        returnValue['color'] = value.color;\n        rangeBands.push(i);\n      });\n      return returnValue;\n    });\n    \n    console.log(this.state.data)\n    const margin = { top: 20, right: 20, bottom: 60, left: 190 },\n      width = this.state.width - margin.left - margin.right,\n      height = this.state.height - margin.top - margin.bottom;\n\n    let svg = d3\n      .select(\".rowChart\")\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // The scale spacing the groups:\n    const y_category = d3.scaleLinear().rangeRound([0,\n        cummulative > 8 ? height  : cummulative < 4 ? 150 : 400\n    ]);\n\n    const y_defect = d3\n    .scaleBand()\n    .rangeRound([0, height], 0.1)\n    .domain(rangeBands);\n\n    const y_category_domain = y_defect.bandwidth() * rangeBands.length ;\n  \n    y_category.domain([0, y_category_domain]);\n\n    const x = d3.scalePow().range([0, width]);\n\n    x.domain([\n      0,\n      d3.max(data, function(d) {\n        return d3.max(d.values, function(key) {\n          return Math.ceil(key.projectPeriod);\n        });\n      })\n    ]);\n\n    const xAxis = d3.axisBottom().scale(x);\n    xAxis.ticks(5).tickSize(- height - 5).tickPadding([10]);\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .attr(\"class\", \"x axis\")\n      .call(xAxis)\n      .append(\"text\")\n      .attr(\"dy\", \".10em\")\n      .attr(\"fill\", \"#000\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Year\")\n      .attr(\"transform\", \"translate( -20 , 15 )\");\n\n    let category_g = svg\n      .selectAll(\".category\")\n      .data(data)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", function(d) {\n          return \"category category-\" + d.companyName;\n      })\n      .attr(\"transform\", function(d) {\n        return (\n          \"translate(0,\" + \n          y_category(d.cummulative * y_defect.bandwidth()) +\n          \")\"\n        );\n      })\n      .attr(\"fill\", function(d) {\n          return d.color;\n      });\n\n      category_g\n      .selectAll(\".category-label\")\n      .data(function(d) {\n        return [d];\n      })\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", function(d) {\n        return \"category-label category-label-\" + d.companyName;\n      })\n      .attr(\"transform\", function(d) {\n        var x_label = y_category(\n          (d.values.length * y_defect.bandwidth() + barPadding) / 2 + 4\n        );\n        var y_label = -5;\n        return \"translate(\" + y_label + \",\" + x_label + \")\";\n      })\n      .text(function(d) {\n        return d.companyName;\n      })\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"fill\", \"#000\");\n\n    let defect_g = category_g\n      .selectAll(\".defect\")\n      .data(function(d) {\n        return d.values;\n      })\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", function(d) {\n        return \"defect defect-\" + d.name;\n      })\n      .attr(\"transform\", function(d, i) {\n        return \"translate(0,\" + y_category(i * y_defect.bandwidth()) + \")\";\n      });\n\n      defect_g\n      .selectAll(\".rect\")\n      .data(function(d) {\n        return [d];\n      })\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"rect\")\n      .attr(\"height\", y_category(y_defect.bandwidth() - barPadding))\n      .attr(\"y\", function(d) {\n        return y_category(barPadding);\n      })\n      .attr(\"x\", x(0))\n      .attr(\"width\", function(d) {\n        return x(d.projectPeriod);\n      }) \n      .on(\"mouseover\", function() {\n        d3.select(this).style(\"opacity\", 0.5);\n      })\n      .on(\"mouseout\", function() {\n        d3.select(this).style(\"opacity\", 1);\n      })\n      .on(\"click\", d => {\n        this.showProject(d);\n      });\n\n  };\n  \n\n  render() {\n    return (\n      <div className=\"rowChart\">\n        <Dialogue\n          dialogueInfo={this.state.recentData}\n          dialogueIsShown={this.state.dialogueIsShown}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BarChart;\n","function groupedProjects(data){\nconst grouped = {};\nfor (let client of data) {\n  if (!(client.client in grouped)) grouped[client.client] = [client];\n  else grouped[client.client].push(client);\n}\n\n\nreturn {grouped}\n\n}\n\nexport { groupedProjects };","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nconst width = \"100%\";\nconst height = 700;\nclass BubbleChart extends Component {\n  constructor(props) {\n    super(props);\n    const { technologies } = this.props;\n    const categoryDataList = [];\n    const legendList = {};\n\n    for (let value of technologies) {\n      if (!(value.category in categoryDataList))\n        categoryDataList[value.category] = [value];\n      else categoryDataList[value.category].push(value);\n    }\n\n    for (let catValue of technologies) {\n      legendList[catValue.category] = catValue.color;\n    }\n\n    let firstCategory = Object.keys(legendList)[0];\n\n    this.state = {\n      showData: [],\n      legend: legendList,\n      currentCategory: firstCategory,\n      categoryDataList: categoryDataList\n    };\n  }\n\n  componentDidMount() {\n    this.drawBubble(this.state.currentCategory);\n  }\n\n  onClicked = currentCategory => {\n    this.setState({ currentCategory: currentCategory });\n    this.drawBubble(currentCategory);\n  };\n\n  drawBubble = currentCategory => {\n    let data =  currentCategory === 'All' ? \n    this.props.technologies : this.state.categoryDataList[currentCategory];\n\n    data = data.filter(value =>{\n      return value.category !== 'All'\n    })\n\n    const countCat = data.length;\n    let svg = d3.select(\".bubble\");\n    let width = document.body.clientWidth; // get width in pixels\n    let height = +svg.attr(\"height\");\n    let centerX = width * 0.5;\n    let centerY = height * 0.5;\n    let strength = 0.04;\n    let focusedNode;\n    // use pack to calculate radius of the circle\n    let pack = d3\n      .pack()\n      .size([width, height])\n      .padding(1.6);\n    let forceCollide = d3.forceCollide(d => d.r);\n    // use the force\n    let simulation = d3\n      .forceSimulation()\n      .force(\"charge\", d3.forceManyBody())\n      .force(\"collide\", forceCollide)\n      .force(\"center\", d3.forceCenter(centerX, centerY))\n      .force(\"x\", d3.forceX(centerX).strength(strength))\n      .force(\"y\", d3.forceY(centerY).strength(strength));\n\n    let root = d3.hierarchy({ children: data }).sum(d => d.value);\n\n    // use pack() to automatically calculate radius conveniently only\n    // and get only the leaves\n    let nodes = pack(root)\n      .leaves()\n      .map(node => {\n        // console.log(\"node:\", node.x, (node.x - centerX) * 2);\n        const data = node.data;\n      \n        return {\n          x: centerX + (node.x - centerX) * 2, // magnify start position to have transition to center movement\n          y: centerY + (node.y - centerY) * 2,\n          r: 0, // for tweening\n          R: data.color.R,\n          G: data.color.G,\n          B: data.color.B,\n          radius:  countCat > 70 ? 30 : countCat > 30 ? 40 : 50, //original radius\n          id: data.category + \".\" + data.name.replace(/\\s/g, \"-\"),\n          cat: data.category,\n          name: data.name,\n          icon: data.icon\n        };\n      });\n      \n      console.log(data.category)\n    simulation.nodes(nodes).on(\"tick\", ticked);\n\n    d3.selectAll(\".node\").remove();\n\n\n    let node = svg\n      .selectAll(\".node\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"node\")\n      .call(\n        d3\n          .drag()\n          .on(\"start\", d => {\n            if (!d3.event.active) simulation.alphaTarget(0.2).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n          })\n          .on(\"drag\", d => {\n            d.fx = d3.event.x;\n            d.fy = d3.event.y;\n          })\n          .on(\"end\", d => {\n            if (!d3.event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n          })\n      );\n\n    \n    node\n      .append(\"circle\")\n      .attr(\"id\", d => d.id)\n      .attr(\"r\", 0)\n      .style(\"fill\", d => `rgb(${d.R},${d.G},${d.B})`)\n      .transition()\n      .duration(2000)\n      .ease(d3.easeElasticOut)\n      .tween(\"circleIn\", d => {\n        let i = d3.interpolateNumber(0, d.radius);\n        return t => {\n          d.r = i(t);\n          simulation.force(\"collide\", forceCollide);\n        };\n      });\n\n    node\n      .append(\"text\")\n      .selectAll(\"tspan\")\n      .data(d => d.name.split(\" \"))\n      .enter()\n      .append(\"tspan\")\n      .style(\"fill\", \"#fff\")\n      .style(\"font-size\", countCat > 70 ? \"0.8em\" : countCat > 30 ? \"1em\" : \"1.2em\")\n      .attr(\"x\", 0)\n      .attr(\"y\", (d, i, nodes) => 13 + (i - nodes.length / 2 - 0.5) * 12)\n      .text(name => name);\n\n    node\n      .filter(d => String(d.icon).includes(\"img/\"))\n      .append(\"image\")\n      .classed(\"node-icon hidden\", true)\n      .attr(\"xlink:href\", d => d.icon)\n      .attr(\"x\", d => -d.radius * 0.6)\n      .attr(\"y\", d => -d.radius * 0.1)\n      .attr(\"height\", d => d.radius * 2 * 0.6)\n      .attr(\"width\", d => d.radius * 2 * 0.6);\n\n    node\n      .append(\"title\")\n      .selectAll(\"circle-overlay_title\")\n      .data(d => d.name.split(\" \"))\n      .style(\"fill\", \"#fff\")\n      .style(\"font-size\", \"1.9em\")\n      .attr(\"x\", 0)\n      .attr(\"y\", (d, i, nodes) => 13 + (i - nodes.length / 2 - 0.5) * 12)\n      .text(d => d.name);\n\n    node.on(\"click\", currentNode => {\n      d3.event.stopPropagation();\n      let newColorR = currentNode.R - 50;\n      let newColorG = currentNode.G - 50;\n      let newColorB = currentNode.B - 50;\n      console.log(\"currentNode\", currentNode);\n      let currentTarget = d3.event.currentTarget; // the <g> el\n      if (currentNode === focusedNode) {\n        // no focusedNode or same focused node is clicked\n        return;\n      }\n\n      d3.select(currentTarget)\n        .select(\"circle\")\n        .style(\"fill\", `rgb(${newColorR},${newColorG},${newColorB})`);\n      d3.selectAll(\".node-icon\").classed(\"hidden\", true);\n\n      let lastNode = focusedNode;\n      console.log(lastNode);\n      focusedNode = currentNode;\n      simulation.alphaTarget(0.2).restart();\n      // hide all circle-overlay\n      console.log(currentTarget);\n      // d3.select(\"tspan\").classed(\"circle-overlay\", true);\n      // d3.selectAll(\".node-icon\").classed(\"node-icon--faded\", false);\n\n      if (lastNode) {\n        lastNode.fx = null;\n        lastNode.fy = null;\n        node\n          .filter((d, i) => i === lastNode.index)\n          .transition()\n          .duration(2000)\n          .ease(d3.easePolyOut)\n          .tween(\"circleOut\", () => {\n            let irl = d3.interpolateNumber(lastNode.r, lastNode.radius);\n            return t => {\n              lastNode.r = irl(t);\n            };\n          })\n          .on(\"interrupt\", () => {\n            console.log(\"interrupt\");\n            lastNode.r = lastNode.radius;\n          })\n          .select(\"circle\")\n          .style(\n            \"fill\",\n            `rgb(${lastNode.R},${lastNode.G},${lastNode.B})`\n          );\n      }\n      // if (!d3.event.active) simulation.alphaTarget(0.5).restart();\n      d3.transition()\n        .duration(2000)\n        .ease(d3.easePolyOut)\n        .tween(\"moveIn\", () => {\n          console.log(\"tweenMoveIn\", currentNode);\n          let ix = d3.interpolateNumber(currentNode.x, centerX);\n          let iy = d3.interpolateNumber(currentNode.y, centerY);\n          let ir = d3.interpolateNumber(currentNode.r, centerY * 0.2);\n          return function(t) {\n            // console.log('i', ix(t), iy(t));\n            currentNode.fx = ix(t);\n            currentNode.fy = iy(t);\n            currentNode.r = ir(t);\n            simulation.force(\"collide\", forceCollide);\n          };\n        })\n        .on(\"end\", () => {\n          simulation.alphaTarget(0);\n          d3.select(currentTarget)\n            .select(\".node-icon\")\n            .classed(\"hidden\", false);\n        })\n        .on(\"interrupt\", () => {\n          console.log(\"move interrupt\", currentNode);\n          currentNode.fx = null;\n          currentNode.fy = null;\n          simulation.alphaTarget(0);\n          d3.select(currentTarget)\n            .select(\"circle\")\n            .style(\n              \"fill\",\n              `rgb(${currentNode.R},${currentNode.G},${currentNode.B})`\n            );\n        });\n    });\n   \n  \n\n    // d3.select(\".bubble\").on(\"click\", () => {\n    //   let target = d3.event.target;\n    //   // check if click on document but not on the circle overlay\n    //   if (!target.closest(\"#circle-overlay\") && focusedNode) {\n    //     console.log(focusedNode);\n    //     console.log(\"out\");\n    //     focusedNode.fx = null;\n    //     focusedNode.fy = null;\n    //     simulation.alphaTarget(0.2).restart();\n\n    //     d3.select(\"circle\").style(\n    //       \"fill\",\n    //       `rgb(${focusedNode.R},${focusedNode.G},${focusedNode.B})`\n    //     );\n\n    //     d3.transition()\n    //       .duration(2000)\n    //       .ease(d3.easePolyOut)\n    //       .tween(\"moveOut\", function() {\n    //         console.log(\"tweenMoveOut\", focusedNode);\n    //         let ir = d3.interpolateNumber(focusedNode.r, focusedNode.radius);\n    //         return function(t) {\n    //           focusedNode.r = ir(t);\n    //           simulation.force(\"collide\", forceCollide);\n    //         };\n    //       })\n    //       .on(\"end\", () => {\n    //         console.log(\"end\");\n    //         focusedNode = null;\n    //         simulation.alphaTarget(0);\n    //       })\n    //       .on(\"interrupt\", () => {\n    //         console.log(\"interrupt\");\n    //         simulation.alphaTarget(0);\n    //       });\n\n    //     // hide all circle-overlay\n    //     // d3.selectAll(\".circle-overlay\").classed(\"hidden\", true);\n    //     // d3.selectAll(\".node-icon\").classed(\"node-icon--faded\", false);\n    //   }\n    //   console.log('out side')\n    //   d3.select(\"circle\").style(\n    //     \"fill\",\n    //     `rgb(${focusedNode.R},${focusedNode.G},${focusedNode.B})`\n    //   );\n    // });\n\n    function ticked() {\n      node\n        .attr(\"transform\", d => `translate(${d.x},${d.y})`)\n        .select(\"circle\")\n        .attr(\"r\", d => d.r);\n    }\n  };\n\n  render() {\n    const categoryBtn = Object.keys(this.state.legend).map((cat, i) => {\n      let rgbColor = this.state.legend[cat];\n      return (\n        <button\n          className={`${\n            this.state.currentCategory === cat\n              ? \"underline\"\n              : \"underline hidden\"\n          } btn secondary`}\n          key={i}\n          id={cat}\n          onClick={() => this.onClicked(cat)}\n          style={{\n            backgroundColor: `rgb(${rgbColor.R},${rgbColor.G},${rgbColor.B})`\n          }}\n        >\n          {cat}\n        </button>\n      );\n    });\n\n    console.log(categoryBtn);\n\n    return (\n      <div>\n        <div className=\"bubbleLegend\">{categoryBtn}</div>\n        <svg\n          className=\"bubble\"\n          width={width}\n          height={height}\n          textAnchor=\"middle\"\n        ></svg>\n      </div>\n    );\n  }\n}\n\nexport default BubbleChart;\n","import { colorGetter, categoryImageGetter } from \"../../../server/employee/utilities/index\";\n\nfunction calculatePercentage(projects) {\n \n  const projectCategoryNames = projects.map(project => project.category);\n  const percentage = 100 / projectCategoryNames.length;\n  const projectCategoryPercentages = {};\n  projectCategoryNames.map(project => {\n    if (projectCategoryPercentages[project]) {\n      return (projectCategoryPercentages[project] =\n        projectCategoryPercentages[project] + percentage);\n    } else {\n      return (projectCategoryPercentages[project] = percentage);\n    }\n  });\n  return Object.keys(projectCategoryPercentages).map(key => {\n    return {\n      value: projectCategoryPercentages[key],\n      label: key,\n   \n    };\n  });\n}\n\nasync function getCategoryLogoColor(projects){\n    const grouped = {};\n    for (let client of projects) {\n      if (!(client.category in grouped)) grouped[client.category] = [client];\n      else grouped[client.category].push(client);\n    }\n  \n    let color;\n    let arrayColor = [];\n    for (let category in grouped) {\n      let categoryLogo = categoryImageGetter(category);\n      try {\n        color = await colorGetter(categoryLogo);\n      } catch (error) {\n        color = \"\";\n      }\n      arrayColor.push(color);\n    }\n    return arrayColor\n}\n\nexport { calculatePercentage, getCategoryLogoColor};\n","import React from \"react\";\nimport * as d3 from \"d3\";\n\nconst Slice = props => {\n  const { pie } = props;\n\n  let arc = d3\n    .arc()\n    .innerRadius(0)\n    .outerRadius(150);\n\n  return pie.map((slice, index) => {\n    let { color } = slice.data.value;\n    return (\n      <g key={index}>\n        <path d={arc(slice)} fill={color} />\n      </g>\n    );\n  });\n};\n\nexport { Slice };\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport { calculatePercentage, getCategoryLogoColor } from \"./action\";\nimport { Slice } from \"./Slice\";\n\nconst height = 400;\nconst width = 400;\n\nclass CategoryPieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      d3Data: [],\n      d3Color: []\n    };\n  }\n\n  async componentDidMount() {\n    const { projects } = this.props;\n    const d3Data = calculatePercentage(projects);\n    const d3Color = await getCategoryLogoColor(projects);\n    this.setState({ d3Data: d3Data, d3Color: d3Color });\n  }\n\n  render() {\n    const { d3Data, d3Color } = this.state;\n\n    for (let i = 0; i < d3Data.length; i++) {\n      d3Data[i].color = d3Color[i];\n    }\n\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value(function(d) {\n        return d.value.value;\n      });\n    const data_ready = pie(d3.entries(d3Data));\n    return (\n      <div>\n        <svg height={height} width={width}>\n          <g transform={`translate(${width / 2},${height / 2})`}>\n            <Slice pie={data_ready} width={width} height={height} />\n          </g>\n        </svg>\n        <div className=\"legendBox\">\n        {data_ready.map((e, i) => {\n          return (\n            <div key={i}>\n              <span\n                style={{ backgroundColor: e.data.value.color }}\n                className=\"chart-label\"\n              ></span>\n              <span>{e.data.value.label}</span>\n            </div>\n          );\n        })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { CategoryPieChart };\n","import React from 'react'\n\nconst MobileView = () => (\n   <div className=\"mobile-message\">\n      <div className=\"logo d-flex large\">\n        <div className=\"spacing-h small\" />\n        <h1>FindOut Visualization</h1>\n      </div>\n      <div className=\"spacing\" />\n      <p>\n        Please visit us from a desktop, this visualization is not\n        responsive....\n      </p>\n    </div>\n)\n\nexport default MobileView;\n","import axios from 'axios'\n\n  const api_URL = ``;\n  export  async function fetchData(id){\n\n    const employeeApiRequest = `${api_URL}/employee?id=${id}`;\n\n        const options = {\n            url: employeeApiRequest,\n            responseType: \"json\",\n            method: 'GET',\n          };\n        \n          let response;\n          try {\n            response = await axios(options);\n          } catch (error) {\n            return {};\n          }\n        if(response.status === 200){\n            return response.data;\n        }\n    }\n\n\n  ","import { fetchData } from \"./api\";\nimport { colorGetter, skillsLogoGetter } from \"./utilities/index\"\nimport moment from \"moment\";\n\nconst dateFormat = \"YYYY-MM-DD\";\n\nexport async function getData(id) {\n  const employee = await fetchData(id);\n  if (!employee) return Error;\n\n  const { projects } = employee; \n  const { technologies } = employee;\n\n  /*-------------------   Barchart -------------------------- */\n  let projectsBarChart = [];\n  for (let project of projects) {\n    const { startDate, endDate, endDateList, startDateList } = getDates(\n      project.startDates,\n      project.endDates\n    );\n    const duration =\n      Math.floor(\n        moment.duration(moment(endDate).diff(moment(startDate))).asMonths()\n      ) / 12;\n    let imageSrc = `/img/logos/${project.client\n      .trim()\n      .replace(/\\s/g, \"_\")}.png`;\n    let color;\n    try {\n      color = await colorGetter(imageSrc);\n    } catch (error) {\n      color = \"#3E5641\";\n      imageSrc = \"/img/logos/company_placeholder.png\";\n    }\n\n    projectsBarChart.push({\n      id: project.id,\n      name: project.name,\n      category: project.category,\n      client: project.client,\n      startDate: startDate,\n      endDate:\n        endDateList.length !== startDateList.length ? \"Ongoing\" : endDate,\n      description: project.description,\n      img: `${process.env.PUBLIC_URL}/${imageSrc}`,\n      color: color,\n      projectPeriod: duration\n    });\n  }\n\n  function getDates(startDates, endDates) {\n    const startDateList = startDates.split(\",\").map(date => date.trim());\n    const endDateList = endDates\n      ? endDates.split(\",\").map(date => date.trim())\n      : [];\n    const startDate = startDateList[0];\n    let endDate;\n    if (startDateList.length === endDateList.length) {\n      // Number of days doesn't always correspond to the month\n      const endDateSplitted = endDateList[endDateList.length - 1].split(\"-\");\n      const year = endDateSplitted[0];\n      const month = endDateSplitted[1];\n      endDate = moment(`${year}-${month}`)\n        .endOf(\"month\")\n        .format(dateFormat);\n    } // Ongoing project\n    else endDate = moment().format(dateFormat);\n    return { startDate, endDate, endDateList, startDateList };\n  }\n\n  /*-------------------   Bubblechart -------------------------- */\n  let technology = [];\n\n //Colors of labels on bubblechart\n  function getColor(category){\n    switch (category) {\n      case 'Web':\n        return { R: 214, G: 142, B: 122 }\n      case 'Tools':\n        return { R: 78, G: 179, B: 114 }\n      case 'Database':\n        return { R: 209, G: 199, B: 54 }\n      case 'Graphical':\n        return { R: 216, G: 87, B: 98 }\n      case 'Programming/Skills':\n        return { R: 59, G: 89, B: 115 }\n      case 'Productivity':\n        return { R: 222, G: 143, B: 76 }\n      case 'Framework':\n        return { R: 124, G: 105, B: 144 }\n      case 'Methodology':\n        return { R: 71, G: 154, B: 139 }\n      case 'Environment':\n        return { R: 170, G: 110, B: 40 }\n      case 'Other':\n        return { R: 117, G: 165, B: 214 }\n      case 'All':\n        return { R: 154, G: 58, B: 58 }\n      default:\n        return category;\n    }\n  }\n \n    //Make new object\n    for (let tech in technologies) {\n      let skills = technologies[tech];\n\n      console.log(tech);\n      for (let name of skills) {\n        let img = `../img/skills/${name.trim().replace(/\\s/g, \"_\")}.png`;\n        try {\n          await skillsLogoGetter(img);\n        } catch {\n          img = name;\n        }\n        technology.push({\n          category: tech,\n          name: name,\n          color: getColor(tech),\n          icon: img,\n          value: 1\n        });\n      }\n    }\n\n    //Check if technologies is empty object or not. \n    //If it is empty object then it doesn't add category All\n    if(Object.entries(technologies).length !== 0){\n      technology.push({\n        category: 'All',\n        name: 'all',\n        color:getColor('All'),\n      })\n    }\n  \n  //Sort in descending order\n  const categoryDataList = [];\n  for (let value of technology) {\n    if (!(value.category in categoryDataList))\n      categoryDataList[value.category] = [value];\n    else categoryDataList[value.category].push(value);\n  }\n  technology.sort(function(a, b) {\n    return (\n      categoryDataList[b.category].length - categoryDataList[a.category].length\n    );\n  });\n\n  return {\n    employeeProfile: employee,\n    projects: projects,\n    projectsBarChart: projectsBarChart,\n    technology: technology\n  };\n}\n","import React from \"react\";\nimport \"../styles/employee.scss\"\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport Header from \"../components/employee/header/Header\";\nimport Loader from \"../components/employee/loader/Loader\";\nimport Profile from \"../components/employee/profile/Profile\";\nimport BarChart from \"../components/employee/barChart/BarChart\";\nimport BubbleChart from \"../components/employee/bubbleChart/BubbleChart\"\nimport { CategoryPieChart } from \"../components/employee/pieChart/CategoryPieChart\";\nimport MobileView from \"../components/employee/mobileView/MobileView\";\nimport { getData } from \"../server/employee/index\";\n\nclass Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      profile: {},\n      projects: [],\n      projectsBarChartData: [],\n      technologies: []\n    };\n  }\n\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n    this.setState({ isLoading: true });\n    const { employeeProfile, projects, projectsBarChart, technology } = await getData(id);\n    this.setState({\n      isLoading: false,\n      profile: employeeProfile,\n      projects: projects,\n      projectsBarChartData : projectsBarChart,\n      technologies : technology\n    });\n  }\n\n  resize() {\n    this.setState({ isMobileView: window.innerWidth <= 0 });\n  }\n  \n\n  render() {\n\n    return (\n       <React.Fragment>\n        {this.state.isMobileView ? (\n          <MobileView />\n        ) : this.state.isLoading ? (\n          <Loader />\n        ) : (\n          <Container>\n            <Header history={this.props.history}/>\n            <Row>\n              <Col xs={12} md={8}>\n                <Profile\n                  profile={this.state.profile}\n                  projects={this.state.projects}\n                />\n              </Col>\n              <Col xs={6} md={4}>\n                <CategoryPieChart projects={this.state.projects} />\n              </Col>\n            </Row>\n            {\n              this.state.projectsBarChartData.length === 0 ? '' : \n            <BarChart data={this.state.projectsBarChartData} />\n            }\n            {\n              Object.entries(this.state.technologies).length === 0 ? '' :\n            <BubbleChart technologies={this.state.technologies}/>\n            }\n          </Container>\n        )}\n      </React.Fragment> \n    );\n  }\n}\n\nexport default Employee;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport EmployeeView from \"./pages/EmployeeView\";\n\n\nconst App = () => (\n  <Router>\n    <div className=\"app\">\n      <Route exact path=\"/employeeview/:id\" render={(props) => <EmployeeView {...props}/>} />\n      <Route exact path=\"/\" render={() => <Main />} />\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}